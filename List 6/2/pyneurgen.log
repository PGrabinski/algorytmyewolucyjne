2024-02-20 21:29:39,712 started run
2024-02-20 21:29:40,291 Finished generation: 0 Max generations: 1000
2024-02-20 21:29:40,292 best_value: 6663.0 median: 0.0 mean: 183.388
2024-02-20 21:29:40,292 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:40,886 Finished generation: 1 Max generations: 1000
2024-02-20 21:29:40,887 best_value: 6663.0 median: 0.0 mean: 272.628
2024-02-20 21:29:40,887 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:41,495 Finished generation: 2 Max generations: 1000
2024-02-20 21:29:41,495 best_value: 6663.0 median: 0.0 mean: 272.628
2024-02-20 21:29:41,495 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:42,268 Finished generation: 3 Max generations: 1000
2024-02-20 21:29:42,268 best_value: 6663.0 median: 0.0 mean: 367.54
2024-02-20 21:29:42,269 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:43,182 Finished generation: 4 Max generations: 1000
2024-02-20 21:29:43,183 best_value: 6663.0 median: 0.0 mean: 460.452
2024-02-20 21:29:43,183 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:44,251 Finished generation: 5 Max generations: 1000
2024-02-20 21:29:44,252 best_value: 6663.0 median: 0.0 mean: 536.512
2024-02-20 21:29:44,252 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:45,313 Finished generation: 6 Max generations: 1000
2024-02-20 21:29:45,314 best_value: 6663.0 median: 0.0 mean: 616.548
2024-02-20 21:29:45,314 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:46,622 Finished generation: 7 Max generations: 1000
2024-02-20 21:29:46,622 best_value: 6663.0 median: 0.0 mean: 711.276
2024-02-20 21:29:46,623 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:48,016 Finished generation: 8 Max generations: 1000
2024-02-20 21:29:48,017 best_value: 6663.0 median: 0.0 mean: 837.316
2024-02-20 21:29:48,017 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:49,411 Finished generation: 9 Max generations: 1000
2024-02-20 21:29:49,412 best_value: 6663.0 median: 0.0 mean: 885.188
2024-02-20 21:29:49,412 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:50,927 Finished generation: 10 Max generations: 1000
2024-02-20 21:29:50,927 best_value: 6663.0 median: 0.0 mean: 975.944
2024-02-20 21:29:50,927 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:52,507 Finished generation: 11 Max generations: 1000
2024-02-20 21:29:52,508 best_value: 6663.0 median: 0.0 mean: 1035.496
2024-02-20 21:29:52,508 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:54,230 Finished generation: 12 Max generations: 1000
2024-02-20 21:29:54,230 best_value: 6663.0 median: 0.0 mean: 1113.316
2024-02-20 21:29:54,231 import numpy as np
import math
rules = np.array([[3.8, math.sin(6.1 ), (9.4)], [math.sin(+math.sin(math.log(abs(-9.8/0.2)) ) ), 6.9, math.sin(3.8 )], [1.2, (9.1), (+9.4)*math.log(abs(((1.9))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:55,940 Finished generation: 13 Max generations: 1000
2024-02-20 21:29:55,941 best_value: 6672.0 median: 0.0 mean: 1163.552
2024-02-20 21:29:55,941 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:29:57,950 Finished generation: 14 Max generations: 1000
2024-02-20 21:29:57,950 best_value: 6672.0 median: 0.0 mean: 1342.932
2024-02-20 21:29:57,950 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:00,021 Finished generation: 15 Max generations: 1000
2024-02-20 21:30:00,021 best_value: 6672.0 median: 0.0 mean: 1383.708
2024-02-20 21:30:00,022 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:02,097 Finished generation: 16 Max generations: 1000
2024-02-20 21:30:02,098 best_value: 6672.0 median: 0.0 mean: 1419.06
2024-02-20 21:30:02,098 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:04,215 Finished generation: 17 Max generations: 1000
2024-02-20 21:30:04,216 best_value: 6672.0 median: 0.0 mean: 1482.22
2024-02-20 21:30:04,216 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:06,380 Finished generation: 18 Max generations: 1000
2024-02-20 21:30:06,380 best_value: 6672.0 median: 0.0 mean: 1514.736
2024-02-20 21:30:06,381 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:08,757 Finished generation: 19 Max generations: 1000
2024-02-20 21:30:08,757 best_value: 6672.0 median: 0.0 mean: 1667.368
2024-02-20 21:30:08,758 import numpy as np
import math
rules = np.array([[(+math.sin(9.1 )), math.sin(0.3 ), (6.3)], [math.sin(+math.sin(math.log(abs(((1.7)))) ) ), 1.9, math.sin(math.sin(4.3 )*math.sin((-(1.7-1.1*9.2)) )+3.6 )], [8.1, (8.2), (2.8+math.sin(+math.sin(-math.log(abs(0.3)) ) )+math.sin((6.1) ))*math.log(abs(((0.8))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:11,140 Finished generation: 20 Max generations: 1000
2024-02-20 21:30:11,140 best_value: 6673.0 median: 38.0 mean: 1718.548
2024-02-20 21:30:11,140 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:13,533 Finished generation: 21 Max generations: 1000
2024-02-20 21:30:13,533 best_value: 6673.0 median: 0.0 mean: 1709.916
2024-02-20 21:30:13,534 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:15,854 Finished generation: 22 Max generations: 1000
2024-02-20 21:30:15,855 best_value: 6673.0 median: 0.0 mean: 1702.208
2024-02-20 21:30:15,855 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:18,212 Finished generation: 23 Max generations: 1000
2024-02-20 21:30:18,212 best_value: 6673.0 median: 0.0 mean: 1701.924
2024-02-20 21:30:18,212 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:20,527 Finished generation: 24 Max generations: 1000
2024-02-20 21:30:20,528 best_value: 6673.0 median: 0.0 mean: 1690.584
2024-02-20 21:30:20,528 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:22,928 Finished generation: 25 Max generations: 1000
2024-02-20 21:30:22,928 best_value: 6673.0 median: 0.0 mean: 1791.86
2024-02-20 21:30:22,928 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:25,314 Finished generation: 26 Max generations: 1000
2024-02-20 21:30:25,315 best_value: 6673.0 median: 0.0 mean: 1810.024
2024-02-20 21:30:25,315 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:27,704 Finished generation: 27 Max generations: 1000
2024-02-20 21:30:27,705 best_value: 6673.0 median: 191.0 mean: 1871.192
2024-02-20 21:30:27,705 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:30,163 Finished generation: 28 Max generations: 1000
2024-02-20 21:30:30,164 best_value: 6673.0 median: 2151.0 mean: 1888.004
2024-02-20 21:30:30,164 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:32,648 Finished generation: 29 Max generations: 1000
2024-02-20 21:30:32,649 best_value: 6673.0 median: 2151.0 mean: 1896.16
2024-02-20 21:30:32,649 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:35,051 Finished generation: 30 Max generations: 1000
2024-02-20 21:30:35,052 best_value: 6673.0 median: 0.0 mean: 1822.42
2024-02-20 21:30:35,052 import numpy as np
import math
rules = np.array([[3.8, math.sin(7.6 ), (1.9)], [math.log(abs(+math.sin((-pow(2.9/(1.7)+(pow(8.9, 3.9)), 3.8)) ))), ((1.0)), math.log(abs(0.3))], [8.8, (math.log(abs(6.8))), math.sin(1.1 )*math.log(abs(math.log(abs((+math.log(abs(6.3))*pow((math.sin(math.sin(0.8 ) )), 1.8))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:37,503 Finished generation: 31 Max generations: 1000
2024-02-20 21:30:37,503 best_value: 7320.0 median: 1650.0 mean: 1955.636
2024-02-20 21:30:37,504 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:39,819 Finished generation: 32 Max generations: 1000
2024-02-20 21:30:39,819 best_value: 7320.0 median: 0.0 mean: 1916.548
2024-02-20 21:30:39,819 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:42,129 Finished generation: 33 Max generations: 1000
2024-02-20 21:30:42,130 best_value: 7320.0 median: 0.0 mean: 1947.804
2024-02-20 21:30:42,130 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:44,471 Finished generation: 34 Max generations: 1000
2024-02-20 21:30:44,472 best_value: 7320.0 median: 0.0 mean: 1980.148
2024-02-20 21:30:44,473 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:46,706 Finished generation: 35 Max generations: 1000
2024-02-20 21:30:46,706 best_value: 7320.0 median: 0.0 mean: 1906.816
2024-02-20 21:30:46,707 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:48,930 Finished generation: 36 Max generations: 1000
2024-02-20 21:30:48,930 best_value: 7320.0 median: 0.0 mean: 1861.676
2024-02-20 21:30:48,931 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:51,201 Finished generation: 37 Max generations: 1000
2024-02-20 21:30:51,201 best_value: 7320.0 median: 0.0 mean: 1935.108
2024-02-20 21:30:51,202 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:53,574 Finished generation: 38 Max generations: 1000
2024-02-20 21:30:53,575 best_value: 7320.0 median: 1837.0 mean: 2025.36
2024-02-20 21:30:53,575 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:55,899 Finished generation: 39 Max generations: 1000
2024-02-20 21:30:55,899 best_value: 7320.0 median: 0.0 mean: 1982.324
2024-02-20 21:30:55,899 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:30:58,475 Finished generation: 40 Max generations: 1000
2024-02-20 21:30:58,475 best_value: 7320.0 median: 2676.0 mean: 2154.316
2024-02-20 21:30:58,476 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:01,000 Finished generation: 41 Max generations: 1000
2024-02-20 21:31:01,001 best_value: 7320.0 median: 2676.0 mean: 2102.992
2024-02-20 21:31:01,001 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:03,554 Finished generation: 42 Max generations: 1000
2024-02-20 21:31:03,554 best_value: 7320.0 median: 2676.0 mean: 2130.904
2024-02-20 21:31:03,555 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:06,105 Finished generation: 43 Max generations: 1000
2024-02-20 21:31:06,105 best_value: 7320.0 median: 2676.0 mean: 2157.86
2024-02-20 21:31:06,106 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:08,931 Finished generation: 44 Max generations: 1000
2024-02-20 21:31:08,931 best_value: 7320.0 median: 2676.0 mean: 2255.476
2024-02-20 21:31:08,931 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:11,515 Finished generation: 45 Max generations: 1000
2024-02-20 21:31:11,515 best_value: 7320.0 median: 2676.0 mean: 2209.032
2024-02-20 21:31:11,516 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:14,024 Finished generation: 46 Max generations: 1000
2024-02-20 21:31:14,024 best_value: 7320.0 median: 2676.0 mean: 2144.696
2024-02-20 21:31:14,025 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:16,460 Finished generation: 47 Max generations: 1000
2024-02-20 21:31:16,461 best_value: 7320.0 median: 1552.0 mean: 2065.816
2024-02-20 21:31:16,461 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:19,001 Finished generation: 48 Max generations: 1000
2024-02-20 21:31:19,002 best_value: 7320.0 median: 2676.0 mean: 2150.888
2024-02-20 21:31:19,002 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:21,490 Finished generation: 49 Max generations: 1000
2024-02-20 21:31:21,490 best_value: 7320.0 median: 2676.0 mean: 2216.088
2024-02-20 21:31:21,491 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:24,142 Finished generation: 50 Max generations: 1000
2024-02-20 21:31:24,143 best_value: 7320.0 median: 2676.0 mean: 2269.172
2024-02-20 21:31:24,143 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:26,687 Finished generation: 51 Max generations: 1000
2024-02-20 21:31:26,687 best_value: 7320.0 median: 2676.0 mean: 2191.284
2024-02-20 21:31:26,688 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:29,379 Finished generation: 52 Max generations: 1000
2024-02-20 21:31:29,379 best_value: 7320.0 median: 2676.0 mean: 2171.024
2024-02-20 21:31:29,380 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:31,761 Finished generation: 53 Max generations: 1000
2024-02-20 21:31:31,761 best_value: 7320.0 median: 2285.0 mean: 2172.148
2024-02-20 21:31:31,762 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:34,120 Finished generation: 54 Max generations: 1000
2024-02-20 21:31:34,120 best_value: 7320.0 median: 0.0 mean: 2168.82
2024-02-20 21:31:34,120 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:36,426 Finished generation: 55 Max generations: 1000
2024-02-20 21:31:36,427 best_value: 7320.0 median: 0.0 mean: 2083.644
2024-02-20 21:31:36,427 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:39,003 Finished generation: 56 Max generations: 1000
2024-02-20 21:31:39,004 best_value: 7320.0 median: 0.0 mean: 2227.888
2024-02-20 21:31:39,004 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:41,581 Finished generation: 57 Max generations: 1000
2024-02-20 21:31:41,581 best_value: 7320.0 median: 0.0 mean: 2222.704
2024-02-20 21:31:41,581 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:44,415 Finished generation: 58 Max generations: 1000
2024-02-20 21:31:44,415 best_value: 7320.0 median: 2676.0 mean: 2368.596
2024-02-20 21:31:44,416 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:46,990 Finished generation: 59 Max generations: 1000
2024-02-20 21:31:46,991 best_value: 7320.0 median: 2676.0 mean: 2408.052
2024-02-20 21:31:46,991 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:49,625 Finished generation: 60 Max generations: 1000
2024-02-20 21:31:49,626 best_value: 7320.0 median: 2991.0 mean: 2469.96
2024-02-20 21:31:49,626 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:52,117 Finished generation: 61 Max generations: 1000
2024-02-20 21:31:52,117 best_value: 7320.0 median: 0.0 mean: 2309.76
2024-02-20 21:31:52,118 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:54,764 Finished generation: 62 Max generations: 1000
2024-02-20 21:31:54,764 best_value: 7320.0 median: 0.0 mean: 2299.152
2024-02-20 21:31:54,765 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:57,227 Finished generation: 63 Max generations: 1000
2024-02-20 21:31:57,227 best_value: 7320.0 median: 2676.0 mean: 2399.36
2024-02-20 21:31:57,228 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:31:59,761 Finished generation: 64 Max generations: 1000
2024-02-20 21:31:59,761 best_value: 7320.0 median: 2676.0 mean: 2422.728
2024-02-20 21:31:59,761 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:02,321 Finished generation: 65 Max generations: 1000
2024-02-20 21:32:02,321 best_value: 7320.0 median: 2676.0 mean: 2463.064
2024-02-20 21:32:02,321 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:05,054 Finished generation: 66 Max generations: 1000
2024-02-20 21:32:05,055 best_value: 7320.0 median: 2676.0 mean: 2484.928
2024-02-20 21:32:05,055 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:07,619 Finished generation: 67 Max generations: 1000
2024-02-20 21:32:07,620 best_value: 7320.0 median: 2676.0 mean: 2435.58
2024-02-20 21:32:07,620 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:10,093 Finished generation: 68 Max generations: 1000
2024-02-20 21:32:10,094 best_value: 7320.0 median: 1854.0 mean: 2429.636
2024-02-20 21:32:10,094 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:12,659 Finished generation: 69 Max generations: 1000
2024-02-20 21:32:12,660 best_value: 7320.0 median: 2076.0 mean: 2470.796
2024-02-20 21:32:12,660 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:15,371 Finished generation: 70 Max generations: 1000
2024-02-20 21:32:15,372 best_value: 7320.0 median: 2676.0 mean: 2534.684
2024-02-20 21:32:15,372 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:18,113 Finished generation: 71 Max generations: 1000
2024-02-20 21:32:18,113 best_value: 7320.0 median: 1179.0 mean: 2483.916
2024-02-20 21:32:18,114 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:21,588 Finished generation: 72 Max generations: 1000
2024-02-20 21:32:21,588 best_value: 7320.0 median: 2991.0 mean: 2682.228
2024-02-20 21:32:21,589 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:25,622 Finished generation: 73 Max generations: 1000
2024-02-20 21:32:25,623 best_value: 7320.0 median: 2676.0 mean: 2508.804
2024-02-20 21:32:25,623 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:29,498 Finished generation: 74 Max generations: 1000
2024-02-20 21:32:29,499 best_value: 7320.0 median: 1179.0 mean: 2476.096
2024-02-20 21:32:29,499 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:32,566 Finished generation: 75 Max generations: 1000
2024-02-20 21:32:32,568 best_value: 7320.0 median: 0.0 mean: 2330.836
2024-02-20 21:32:32,568 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:36,003 Finished generation: 76 Max generations: 1000
2024-02-20 21:32:36,004 best_value: 7320.0 median: 2515.0 mean: 2510.936
2024-02-20 21:32:36,004 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:39,224 Finished generation: 77 Max generations: 1000
2024-02-20 21:32:39,224 best_value: 7320.0 median: 2991.0 mean: 2637.276
2024-02-20 21:32:39,224 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:42,519 Finished generation: 78 Max generations: 1000
2024-02-20 21:32:42,520 best_value: 7320.0 median: 2991.0 mean: 2745.032
2024-02-20 21:32:42,520 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:45,703 Finished generation: 79 Max generations: 1000
2024-02-20 21:32:45,703 best_value: 7320.0 median: 2991.0 mean: 2727.712
2024-02-20 21:32:45,703 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:48,745 Finished generation: 80 Max generations: 1000
2024-02-20 21:32:48,746 best_value: 7320.0 median: 2933.0 mean: 2585.256
2024-02-20 21:32:48,746 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:52,078 Finished generation: 81 Max generations: 1000
2024-02-20 21:32:52,079 best_value: 7320.0 median: 2991.0 mean: 2667.892
2024-02-20 21:32:52,079 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:55,718 Finished generation: 82 Max generations: 1000
2024-02-20 21:32:55,719 best_value: 7320.0 median: 2676.0 mean: 2628.796
2024-02-20 21:32:55,719 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:32:59,835 Finished generation: 83 Max generations: 1000
2024-02-20 21:32:59,836 best_value: 7320.0 median: 2676.0 mean: 2625.928
2024-02-20 21:32:59,837 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:03,674 Finished generation: 84 Max generations: 1000
2024-02-20 21:33:03,675 best_value: 7320.0 median: 2676.0 mean: 2575.496
2024-02-20 21:33:03,675 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:07,562 Finished generation: 85 Max generations: 1000
2024-02-20 21:33:07,563 best_value: 7320.0 median: 2676.0 mean: 2522.156
2024-02-20 21:33:07,563 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:12,549 Finished generation: 86 Max generations: 1000
2024-02-20 21:33:12,550 best_value: 7320.0 median: 2676.0 mean: 2539.768
2024-02-20 21:33:12,551 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:16,847 Finished generation: 87 Max generations: 1000
2024-02-20 21:33:16,847 best_value: 7320.0 median: 2676.0 mean: 2513.116
2024-02-20 21:33:16,848 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:20,076 Finished generation: 88 Max generations: 1000
2024-02-20 21:33:20,077 best_value: 7320.0 median: 2676.0 mean: 2507.336
2024-02-20 21:33:20,077 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:23,379 Finished generation: 89 Max generations: 1000
2024-02-20 21:33:23,379 best_value: 7320.0 median: 2676.0 mean: 2557.724
2024-02-20 21:33:23,380 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:26,478 Finished generation: 90 Max generations: 1000
2024-02-20 21:33:26,478 best_value: 7320.0 median: 6.0 mean: 2480.972
2024-02-20 21:33:26,479 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:29,493 Finished generation: 91 Max generations: 1000
2024-02-20 21:33:29,493 best_value: 7320.0 median: 0.0 mean: 2439.528
2024-02-20 21:33:29,494 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:32,733 Finished generation: 92 Max generations: 1000
2024-02-20 21:33:32,734 best_value: 7320.0 median: 0.0 mean: 2440.7
2024-02-20 21:33:32,734 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:35,808 Finished generation: 93 Max generations: 1000
2024-02-20 21:33:35,808 best_value: 7320.0 median: 0.0 mean: 2425.616
2024-02-20 21:33:35,809 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:38,826 Finished generation: 94 Max generations: 1000
2024-02-20 21:33:38,827 best_value: 7320.0 median: 0.0 mean: 2482.844
2024-02-20 21:33:38,827 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:41,603 Finished generation: 95 Max generations: 1000
2024-02-20 21:33:41,603 best_value: 7320.0 median: 0.0 mean: 2365.64
2024-02-20 21:33:41,604 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:44,330 Finished generation: 96 Max generations: 1000
2024-02-20 21:33:44,330 best_value: 7320.0 median: 0.0 mean: 2314.496
2024-02-20 21:33:44,331 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:47,069 Finished generation: 97 Max generations: 1000
2024-02-20 21:33:47,070 best_value: 7320.0 median: 0.0 mean: 2385.1
2024-02-20 21:33:47,070 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:49,906 Finished generation: 98 Max generations: 1000
2024-02-20 21:33:49,907 best_value: 7320.0 median: 2660.0 mean: 2477.736
2024-02-20 21:33:49,908 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:52,836 Finished generation: 99 Max generations: 1000
2024-02-20 21:33:52,837 best_value: 7320.0 median: 2676.0 mean: 2606.1
2024-02-20 21:33:52,838 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:55,863 Finished generation: 100 Max generations: 1000
2024-02-20 21:33:55,863 best_value: 7320.0 median: 2676.0 mean: 2481.6
2024-02-20 21:33:55,864 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:33:59,047 Finished generation: 101 Max generations: 1000
2024-02-20 21:33:59,047 best_value: 7320.0 median: 2676.0 mean: 2563.412
2024-02-20 21:33:59,048 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:02,192 Finished generation: 102 Max generations: 1000
2024-02-20 21:34:02,193 best_value: 7320.0 median: 2676.0 mean: 2466.056
2024-02-20 21:34:02,193 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:05,454 Finished generation: 103 Max generations: 1000
2024-02-20 21:34:05,455 best_value: 7320.0 median: 2676.0 mean: 2558.7
2024-02-20 21:34:05,455 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:09,191 Finished generation: 104 Max generations: 1000
2024-02-20 21:34:09,192 best_value: 7320.0 median: 2676.0 mean: 2582.056
2024-02-20 21:34:09,192 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:12,942 Finished generation: 105 Max generations: 1000
2024-02-20 21:34:12,943 best_value: 7320.0 median: 2676.0 mean: 2535.004
2024-02-20 21:34:12,943 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:16,830 Finished generation: 106 Max generations: 1000
2024-02-20 21:34:16,830 best_value: 7320.0 median: 2942.0 mean: 2642.156
2024-02-20 21:34:16,831 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:20,658 Finished generation: 107 Max generations: 1000
2024-02-20 21:34:20,659 best_value: 7320.0 median: 2676.0 mean: 2614.84
2024-02-20 21:34:20,659 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:24,536 Finished generation: 108 Max generations: 1000
2024-02-20 21:34:24,537 best_value: 7320.0 median: 2991.0 mean: 2712.004
2024-02-20 21:34:24,537 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:28,363 Finished generation: 109 Max generations: 1000
2024-02-20 21:34:28,365 best_value: 7320.0 median: 2677.0 mean: 2652.176
2024-02-20 21:34:28,366 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:31,953 Finished generation: 110 Max generations: 1000
2024-02-20 21:34:31,954 best_value: 7320.0 median: 2991.0 mean: 2680.08
2024-02-20 21:34:31,954 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:35,590 Finished generation: 111 Max generations: 1000
2024-02-20 21:34:35,591 best_value: 7320.0 median: 2991.0 mean: 2795.524
2024-02-20 21:34:35,591 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:39,056 Finished generation: 112 Max generations: 1000
2024-02-20 21:34:39,057 best_value: 7320.0 median: 2676.0 mean: 2720.824
2024-02-20 21:34:39,057 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:42,515 Finished generation: 113 Max generations: 1000
2024-02-20 21:34:42,515 best_value: 7320.0 median: 2991.0 mean: 2900.636
2024-02-20 21:34:42,516 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:46,227 Finished generation: 114 Max generations: 1000
2024-02-20 21:34:46,228 best_value: 7320.0 median: 2991.0 mean: 2959.024
2024-02-20 21:34:46,228 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:49,866 Finished generation: 115 Max generations: 1000
2024-02-20 21:34:49,866 best_value: 7320.0 median: 2991.0 mean: 2906.712
2024-02-20 21:34:49,867 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:53,172 Finished generation: 116 Max generations: 1000
2024-02-20 21:34:53,172 best_value: 7320.0 median: 2715.0 mean: 2814.332
2024-02-20 21:34:53,173 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:34:56,465 Finished generation: 117 Max generations: 1000
2024-02-20 21:34:56,466 best_value: 7320.0 median: 2832.0 mean: 2854.984
2024-02-20 21:34:56,466 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:00,054 Finished generation: 118 Max generations: 1000
2024-02-20 21:35:00,054 best_value: 7320.0 median: 2715.0 mean: 2886.18
2024-02-20 21:35:00,055 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:03,684 Finished generation: 119 Max generations: 1000
2024-02-20 21:35:03,685 best_value: 7320.0 median: 2991.0 mean: 2911.592
2024-02-20 21:35:03,685 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:06,962 Finished generation: 120 Max generations: 1000
2024-02-20 21:35:06,963 best_value: 7320.0 median: 2676.0 mean: 2684.852
2024-02-20 21:35:06,964 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:10,548 Finished generation: 121 Max generations: 1000
2024-02-20 21:35:10,548 best_value: 7320.0 median: 2832.0 mean: 2746.408
2024-02-20 21:35:10,548 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:13,935 Finished generation: 122 Max generations: 1000
2024-02-20 21:35:13,936 best_value: 7320.0 median: 2676.0 mean: 2736.952
2024-02-20 21:35:13,936 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:17,443 Finished generation: 123 Max generations: 1000
2024-02-20 21:35:17,444 best_value: 7320.0 median: 2676.0 mean: 2773.352
2024-02-20 21:35:17,445 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:20,741 Finished generation: 124 Max generations: 1000
2024-02-20 21:35:20,742 best_value: 7320.0 median: 2676.0 mean: 2581.06
2024-02-20 21:35:20,743 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:24,189 Finished generation: 125 Max generations: 1000
2024-02-20 21:35:24,190 best_value: 7320.0 median: 2676.0 mean: 2675.756
2024-02-20 21:35:24,190 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:27,572 Finished generation: 126 Max generations: 1000
2024-02-20 21:35:27,572 best_value: 7320.0 median: 2676.0 mean: 2663.548
2024-02-20 21:35:27,573 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:30,996 Finished generation: 127 Max generations: 1000
2024-02-20 21:35:30,996 best_value: 7320.0 median: 2676.0 mean: 2725.184
2024-02-20 21:35:30,997 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:34,432 Finished generation: 128 Max generations: 1000
2024-02-20 21:35:34,433 best_value: 7320.0 median: 2991.0 mean: 2775.516
2024-02-20 21:35:34,433 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:38,009 Finished generation: 129 Max generations: 1000
2024-02-20 21:35:38,010 best_value: 7320.0 median: 2991.0 mean: 2768.256
2024-02-20 21:35:38,010 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:41,315 Finished generation: 130 Max generations: 1000
2024-02-20 21:35:41,316 best_value: 7320.0 median: 2676.0 mean: 2694.064
2024-02-20 21:35:41,316 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:44,478 Finished generation: 131 Max generations: 1000
2024-02-20 21:35:44,479 best_value: 7320.0 median: 2676.0 mean: 2673.452
2024-02-20 21:35:44,479 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:47,627 Finished generation: 132 Max generations: 1000
2024-02-20 21:35:47,628 best_value: 7320.0 median: 2676.0 mean: 2640.468
2024-02-20 21:35:47,628 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:50,792 Finished generation: 133 Max generations: 1000
2024-02-20 21:35:50,793 best_value: 7320.0 median: 2676.0 mean: 2606.252
2024-02-20 21:35:50,793 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:53,786 Finished generation: 134 Max generations: 1000
2024-02-20 21:35:53,786 best_value: 7320.0 median: 878.0 mean: 2525.584
2024-02-20 21:35:53,787 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:56,718 Finished generation: 135 Max generations: 1000
2024-02-20 21:35:56,718 best_value: 7320.0 median: 2676.0 mean: 2541.076
2024-02-20 21:35:56,719 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:35:59,839 Finished generation: 136 Max generations: 1000
2024-02-20 21:35:59,839 best_value: 7320.0 median: 2676.0 mean: 2549.656
2024-02-20 21:35:59,840 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:03,003 Finished generation: 137 Max generations: 1000
2024-02-20 21:36:03,004 best_value: 7320.0 median: 2676.0 mean: 2609.872
2024-02-20 21:36:03,004 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:06,002 Finished generation: 138 Max generations: 1000
2024-02-20 21:36:06,002 best_value: 7320.0 median: 2676.0 mean: 2527.936
2024-02-20 21:36:06,002 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:08,964 Finished generation: 139 Max generations: 1000
2024-02-20 21:36:08,965 best_value: 7320.0 median: 2676.0 mean: 2496.436
2024-02-20 21:36:08,965 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:11,951 Finished generation: 140 Max generations: 1000
2024-02-20 21:36:11,952 best_value: 7320.0 median: 2676.0 mean: 2481.948
2024-02-20 21:36:11,952 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:14,913 Finished generation: 141 Max generations: 1000
2024-02-20 21:36:14,913 best_value: 7320.0 median: 1169.0 mean: 2502.232
2024-02-20 21:36:14,914 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:17,930 Finished generation: 142 Max generations: 1000
2024-02-20 21:36:17,931 best_value: 7320.0 median: 2676.0 mean: 2530.804
2024-02-20 21:36:17,931 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:20,808 Finished generation: 143 Max generations: 1000
2024-02-20 21:36:20,809 best_value: 7320.0 median: 0.0 mean: 2448.564
2024-02-20 21:36:20,810 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:23,675 Finished generation: 144 Max generations: 1000
2024-02-20 21:36:23,676 best_value: 7320.0 median: 1169.0 mean: 2492.352
2024-02-20 21:36:23,676 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:26,648 Finished generation: 145 Max generations: 1000
2024-02-20 21:36:26,648 best_value: 7320.0 median: 2676.0 mean: 2516.384
2024-02-20 21:36:26,649 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:29,655 Finished generation: 146 Max generations: 1000
2024-02-20 21:36:29,655 best_value: 7320.0 median: 0.0 mean: 2424.364
2024-02-20 21:36:29,655 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:32,517 Finished generation: 147 Max generations: 1000
2024-02-20 21:36:32,517 best_value: 7320.0 median: 0.0 mean: 2429.104
2024-02-20 21:36:32,518 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:35,374 Finished generation: 148 Max generations: 1000
2024-02-20 21:36:35,376 best_value: 7320.0 median: 0.0 mean: 2391.088
2024-02-20 21:36:35,377 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:38,292 Finished generation: 149 Max generations: 1000
2024-02-20 21:36:38,292 best_value: 7320.0 median: 0.0 mean: 2421.932
2024-02-20 21:36:38,293 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:41,170 Finished generation: 150 Max generations: 1000
2024-02-20 21:36:41,171 best_value: 7320.0 median: 0.0 mean: 2401.536
2024-02-20 21:36:41,171 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:44,144 Finished generation: 151 Max generations: 1000
2024-02-20 21:36:44,144 best_value: 7320.0 median: 2676.0 mean: 2524.656
2024-02-20 21:36:44,145 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:47,290 Finished generation: 152 Max generations: 1000
2024-02-20 21:36:47,291 best_value: 7320.0 median: 2676.0 mean: 2606.716
2024-02-20 21:36:47,291 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:50,281 Finished generation: 153 Max generations: 1000
2024-02-20 21:36:50,282 best_value: 7320.0 median: 2676.0 mean: 2555.628
2024-02-20 21:36:50,282 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:53,359 Finished generation: 154 Max generations: 1000
2024-02-20 21:36:53,360 best_value: 7320.0 median: 2676.0 mean: 2539.976
2024-02-20 21:36:53,360 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:56,351 Finished generation: 155 Max generations: 1000
2024-02-20 21:36:56,352 best_value: 7320.0 median: 2676.0 mean: 2579.664
2024-02-20 21:36:56,353 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:36:59,584 Finished generation: 156 Max generations: 1000
2024-02-20 21:36:59,585 best_value: 7320.0 median: 2676.0 mean: 2674.592
2024-02-20 21:36:59,586 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:02,665 Finished generation: 157 Max generations: 1000
2024-02-20 21:37:02,666 best_value: 7320.0 median: 2676.0 mean: 2725.584
2024-02-20 21:37:02,666 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:05,705 Finished generation: 158 Max generations: 1000
2024-02-20 21:37:05,706 best_value: 7320.0 median: 2676.0 mean: 2678.584
2024-02-20 21:37:05,706 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:08,790 Finished generation: 159 Max generations: 1000
2024-02-20 21:37:08,791 best_value: 7320.0 median: 2676.0 mean: 2765.824
2024-02-20 21:37:08,791 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:11,806 Finished generation: 160 Max generations: 1000
2024-02-20 21:37:11,807 best_value: 7320.0 median: 2676.0 mean: 2675.548
2024-02-20 21:37:11,807 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:14,722 Finished generation: 161 Max generations: 1000
2024-02-20 21:37:14,723 best_value: 7320.0 median: 986.0 mean: 2625.032
2024-02-20 21:37:14,723 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:17,712 Finished generation: 162 Max generations: 1000
2024-02-20 21:37:17,713 best_value: 7320.0 median: 2676.0 mean: 2654.948
2024-02-20 21:37:17,713 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:20,817 Finished generation: 163 Max generations: 1000
2024-02-20 21:37:20,818 best_value: 7320.0 median: 2676.0 mean: 2627.408
2024-02-20 21:37:20,818 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:23,839 Finished generation: 164 Max generations: 1000
2024-02-20 21:37:23,840 best_value: 7320.0 median: 2676.0 mean: 2616.164
2024-02-20 21:37:23,840 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:27,026 Finished generation: 165 Max generations: 1000
2024-02-20 21:37:27,026 best_value: 7320.0 median: 2991.0 mean: 2641.168
2024-02-20 21:37:27,026 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:30,382 Finished generation: 166 Max generations: 1000
2024-02-20 21:37:30,383 best_value: 7320.0 median: 2676.0 mean: 2661.516
2024-02-20 21:37:30,383 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:33,636 Finished generation: 167 Max generations: 1000
2024-02-20 21:37:33,636 best_value: 7320.0 median: 2991.0 mean: 2753.1
2024-02-20 21:37:33,637 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:36,788 Finished generation: 168 Max generations: 1000
2024-02-20 21:37:36,789 best_value: 7320.0 median: 2676.0 mean: 2655.764
2024-02-20 21:37:36,790 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:39,955 Finished generation: 169 Max generations: 1000
2024-02-20 21:37:39,956 best_value: 7320.0 median: 1.0 mean: 2584.816
2024-02-20 21:37:39,957 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:43,174 Finished generation: 170 Max generations: 1000
2024-02-20 21:37:43,175 best_value: 7320.0 median: 2676.0 mean: 2663.512
2024-02-20 21:37:43,175 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:46,362 Finished generation: 171 Max generations: 1000
2024-02-20 21:37:46,364 best_value: 7320.0 median: 2676.0 mean: 2672.68
2024-02-20 21:37:46,365 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:49,543 Finished generation: 172 Max generations: 1000
2024-02-20 21:37:49,544 best_value: 7320.0 median: 0.0 mean: 2570.584
2024-02-20 21:37:49,545 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:52,696 Finished generation: 173 Max generations: 1000
2024-02-20 21:37:52,696 best_value: 7320.0 median: 2676.0 mean: 2680.944
2024-02-20 21:37:52,697 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:55,719 Finished generation: 174 Max generations: 1000
2024-02-20 21:37:55,720 best_value: 7320.0 median: 2676.0 mean: 2615.136
2024-02-20 21:37:55,720 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:37:58,902 Finished generation: 175 Max generations: 1000
2024-02-20 21:37:58,903 best_value: 7320.0 median: 2676.0 mean: 2748.076
2024-02-20 21:37:58,903 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:01,941 Finished generation: 176 Max generations: 1000
2024-02-20 21:38:01,942 best_value: 7320.0 median: 2676.0 mean: 2692.196
2024-02-20 21:38:01,942 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:05,000 Finished generation: 177 Max generations: 1000
2024-02-20 21:38:05,001 best_value: 7320.0 median: 2676.0 mean: 2648.724
2024-02-20 21:38:05,001 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:08,059 Finished generation: 178 Max generations: 1000
2024-02-20 21:38:08,059 best_value: 7320.0 median: 1.0 mean: 2598.704
2024-02-20 21:38:08,060 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:10,966 Finished generation: 179 Max generations: 1000
2024-02-20 21:38:10,967 best_value: 7320.0 median: 0.0 mean: 2573.288
2024-02-20 21:38:10,967 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:13,814 Finished generation: 180 Max generations: 1000
2024-02-20 21:38:13,815 best_value: 7320.0 median: 0.0 mean: 2564.848
2024-02-20 21:38:13,815 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:16,675 Finished generation: 181 Max generations: 1000
2024-02-20 21:38:16,675 best_value: 7320.0 median: 0.0 mean: 2573.036
2024-02-20 21:38:16,676 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:19,495 Finished generation: 182 Max generations: 1000
2024-02-20 21:38:19,496 best_value: 7320.0 median: 0.0 mean: 2494.3
2024-02-20 21:38:19,496 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:22,444 Finished generation: 183 Max generations: 1000
2024-02-20 21:38:22,444 best_value: 7320.0 median: 2676.0 mean: 2652.932
2024-02-20 21:38:22,445 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:25,262 Finished generation: 184 Max generations: 1000
2024-02-20 21:38:25,262 best_value: 7320.0 median: 0.0 mean: 2554.8
2024-02-20 21:38:25,262 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:28,071 Finished generation: 185 Max generations: 1000
2024-02-20 21:38:28,072 best_value: 7320.0 median: 0.0 mean: 2453.092
2024-02-20 21:38:28,072 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:30,854 Finished generation: 186 Max generations: 1000
2024-02-20 21:38:30,855 best_value: 7320.0 median: 0.0 mean: 2465.932
2024-02-20 21:38:30,855 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:33,560 Finished generation: 187 Max generations: 1000
2024-02-20 21:38:33,561 best_value: 7320.0 median: 0.0 mean: 2437.192
2024-02-20 21:38:33,561 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:36,422 Finished generation: 188 Max generations: 1000
2024-02-20 21:38:36,423 best_value: 7320.0 median: 2629.0 mean: 2533.192
2024-02-20 21:38:36,423 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:39,286 Finished generation: 189 Max generations: 1000
2024-02-20 21:38:39,287 best_value: 7320.0 median: 2676.0 mean: 2532.208
2024-02-20 21:38:39,287 import numpy as np
import math
rules = np.array([[3.8, math.sin(4.7 ), (6.3)], [math.sin(+math.sin(math.sin(0.1 ) ) ), 4.9, (((3.9))+1.7)], [6.0, (1.9), -(math.sin(pow(math.sin(-(1.3) ), 9.0) )/math.sin(+math.log(abs(4.8)) ))*math.log(abs(9.9))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:42,092 Finished generation: 190 Max generations: 1000
2024-02-20 21:38:42,093 best_value: 7982.0 median: 2676.0 mean: 2568.448
2024-02-20 21:38:42,093 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:45,062 Finished generation: 191 Max generations: 1000
2024-02-20 21:38:45,063 best_value: 7982.0 median: 2676.0 mean: 2613.2
2024-02-20 21:38:45,063 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:48,156 Finished generation: 192 Max generations: 1000
2024-02-20 21:38:48,156 best_value: 7982.0 median: 2991.0 mean: 2696.82
2024-02-20 21:38:48,157 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:51,226 Finished generation: 193 Max generations: 1000
2024-02-20 21:38:51,226 best_value: 7982.0 median: 2991.0 mean: 2625.628
2024-02-20 21:38:51,227 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:54,223 Finished generation: 194 Max generations: 1000
2024-02-20 21:38:54,223 best_value: 7982.0 median: 2676.0 mean: 2636.128
2024-02-20 21:38:54,224 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:38:57,293 Finished generation: 195 Max generations: 1000
2024-02-20 21:38:57,293 best_value: 7982.0 median: 2991.0 mean: 2688.048
2024-02-20 21:38:57,293 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:00,681 Finished generation: 196 Max generations: 1000
2024-02-20 21:39:00,682 best_value: 7982.0 median: 2991.0 mean: 2798.18
2024-02-20 21:39:00,682 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:03,961 Finished generation: 197 Max generations: 1000
2024-02-20 21:39:03,962 best_value: 7982.0 median: 2991.0 mean: 2790.664
2024-02-20 21:39:03,962 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:07,367 Finished generation: 198 Max generations: 1000
2024-02-20 21:39:07,368 best_value: 7982.0 median: 2991.0 mean: 2911.612
2024-02-20 21:39:07,369 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:10,485 Finished generation: 199 Max generations: 1000
2024-02-20 21:39:10,486 best_value: 7982.0 median: 2676.0 mean: 2691.188
2024-02-20 21:39:10,486 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:13,452 Finished generation: 200 Max generations: 1000
2024-02-20 21:39:13,453 best_value: 7982.0 median: 1891.0 mean: 2641.88
2024-02-20 21:39:13,453 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:16,604 Finished generation: 201 Max generations: 1000
2024-02-20 21:39:16,605 best_value: 7982.0 median: 2991.0 mean: 2770.652
2024-02-20 21:39:16,607 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:19,672 Finished generation: 202 Max generations: 1000
2024-02-20 21:39:19,672 best_value: 7982.0 median: 2676.0 mean: 2683.66
2024-02-20 21:39:19,672 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:22,549 Finished generation: 203 Max generations: 1000
2024-02-20 21:39:22,550 best_value: 7982.0 median: 0.0 mean: 2647.444
2024-02-20 21:39:22,551 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:25,404 Finished generation: 204 Max generations: 1000
2024-02-20 21:39:25,405 best_value: 7982.0 median: 0.0 mean: 2555.916
2024-02-20 21:39:25,405 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:28,200 Finished generation: 205 Max generations: 1000
2024-02-20 21:39:28,200 best_value: 7982.0 median: 0.0 mean: 2472.892
2024-02-20 21:39:28,201 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:30,918 Finished generation: 206 Max generations: 1000
2024-02-20 21:39:30,919 best_value: 7982.0 median: 0.0 mean: 2360.48
2024-02-20 21:39:30,919 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:33,736 Finished generation: 207 Max generations: 1000
2024-02-20 21:39:33,737 best_value: 7982.0 median: 0.0 mean: 2400.632
2024-02-20 21:39:33,737 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:36,557 Finished generation: 208 Max generations: 1000
2024-02-20 21:39:36,558 best_value: 7982.0 median: 0.0 mean: 2447.18
2024-02-20 21:39:36,558 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:39,417 Finished generation: 209 Max generations: 1000
2024-02-20 21:39:39,418 best_value: 7982.0 median: 0.0 mean: 2479.848
2024-02-20 21:39:39,419 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:42,120 Finished generation: 210 Max generations: 1000
2024-02-20 21:39:42,120 best_value: 7982.0 median: 0.0 mean: 2409.684
2024-02-20 21:39:42,121 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:45,040 Finished generation: 211 Max generations: 1000
2024-02-20 21:39:45,041 best_value: 7982.0 median: 2676.0 mean: 2545.968
2024-02-20 21:39:45,041 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:47,979 Finished generation: 212 Max generations: 1000
2024-02-20 21:39:47,979 best_value: 7982.0 median: 14.0 mean: 2502.076
2024-02-20 21:39:47,980 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:50,818 Finished generation: 213 Max generations: 1000
2024-02-20 21:39:50,820 best_value: 7982.0 median: 0.0 mean: 2500.788
2024-02-20 21:39:50,820 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:53,653 Finished generation: 214 Max generations: 1000
2024-02-20 21:39:53,653 best_value: 7982.0 median: 0.0 mean: 2527.064
2024-02-20 21:39:53,654 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:56,629 Finished generation: 215 Max generations: 1000
2024-02-20 21:39:56,630 best_value: 7982.0 median: 242.0 mean: 2614.68
2024-02-20 21:39:56,631 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:39:59,773 Finished generation: 216 Max generations: 1000
2024-02-20 21:39:59,774 best_value: 7982.0 median: 2991.0 mean: 2733.304
2024-02-20 21:39:59,774 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:02,577 Finished generation: 217 Max generations: 1000
2024-02-20 21:40:02,578 best_value: 7982.0 median: 0.0 mean: 2588.564
2024-02-20 21:40:02,579 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:05,383 Finished generation: 218 Max generations: 1000
2024-02-20 21:40:05,384 best_value: 7982.0 median: 0.0 mean: 2526.784
2024-02-20 21:40:05,384 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:08,246 Finished generation: 219 Max generations: 1000
2024-02-20 21:40:08,247 best_value: 7982.0 median: 0.0 mean: 2498.204
2024-02-20 21:40:08,247 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:11,065 Finished generation: 220 Max generations: 1000
2024-02-20 21:40:11,066 best_value: 7982.0 median: 0.0 mean: 2449.14
2024-02-20 21:40:11,066 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:13,959 Finished generation: 221 Max generations: 1000
2024-02-20 21:40:13,959 best_value: 7982.0 median: 0.0 mean: 2520.932
2024-02-20 21:40:13,959 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:16,982 Finished generation: 222 Max generations: 1000
2024-02-20 21:40:16,982 best_value: 7982.0 median: 2676.0 mean: 2621.532
2024-02-20 21:40:16,983 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:19,973 Finished generation: 223 Max generations: 1000
2024-02-20 21:40:19,974 best_value: 7982.0 median: 2676.0 mean: 2628.832
2024-02-20 21:40:19,974 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:22,847 Finished generation: 224 Max generations: 1000
2024-02-20 21:40:22,848 best_value: 7982.0 median: 14.0 mean: 2575.632
2024-02-20 21:40:22,848 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:25,616 Finished generation: 225 Max generations: 1000
2024-02-20 21:40:25,617 best_value: 7982.0 median: 0.0 mean: 2465.096
2024-02-20 21:40:25,617 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:28,233 Finished generation: 226 Max generations: 1000
2024-02-20 21:40:28,234 best_value: 7982.0 median: 0.0 mean: 2387.268
2024-02-20 21:40:28,234 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:30,808 Finished generation: 227 Max generations: 1000
2024-02-20 21:40:30,809 best_value: 7982.0 median: 0.0 mean: 2302.568
2024-02-20 21:40:30,810 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:33,390 Finished generation: 228 Max generations: 1000
2024-02-20 21:40:33,391 best_value: 7982.0 median: 0.0 mean: 2284.668
2024-02-20 21:40:33,391 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:35,929 Finished generation: 229 Max generations: 1000
2024-02-20 21:40:35,930 best_value: 7982.0 median: 0.0 mean: 2280.256
2024-02-20 21:40:35,930 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:38,394 Finished generation: 230 Max generations: 1000
2024-02-20 21:40:38,395 best_value: 7982.0 median: 0.0 mean: 2206.54
2024-02-20 21:40:38,395 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:41,513 Finished generation: 231 Max generations: 1000
2024-02-20 21:40:41,513 best_value: 7982.0 median: 0.0 mean: 2366.808
2024-02-20 21:40:41,514 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:44,242 Finished generation: 232 Max generations: 1000
2024-02-20 21:40:44,243 best_value: 7982.0 median: 0.0 mean: 2293.988
2024-02-20 21:40:44,243 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:46,955 Finished generation: 233 Max generations: 1000
2024-02-20 21:40:46,955 best_value: 7982.0 median: 0.0 mean: 2336.028
2024-02-20 21:40:46,955 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:49,696 Finished generation: 234 Max generations: 1000
2024-02-20 21:40:49,697 best_value: 7982.0 median: 0.0 mean: 2385.668
2024-02-20 21:40:49,697 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:52,239 Finished generation: 235 Max generations: 1000
2024-02-20 21:40:52,240 best_value: 7982.0 median: 0.0 mean: 2375.26
2024-02-20 21:40:52,240 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:54,927 Finished generation: 236 Max generations: 1000
2024-02-20 21:40:54,927 best_value: 7982.0 median: 1746.0 mean: 2511.628
2024-02-20 21:40:54,928 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:40:57,489 Finished generation: 237 Max generations: 1000
2024-02-20 21:40:57,490 best_value: 7982.0 median: 0.0 mean: 2407.468
2024-02-20 21:40:57,491 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:00,086 Finished generation: 238 Max generations: 1000
2024-02-20 21:41:00,087 best_value: 7982.0 median: 0.0 mean: 2415.336
2024-02-20 21:41:00,087 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:02,792 Finished generation: 239 Max generations: 1000
2024-02-20 21:41:02,793 best_value: 7982.0 median: 2676.0 mean: 2580.288
2024-02-20 21:41:02,793 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:05,639 Finished generation: 240 Max generations: 1000
2024-02-20 21:41:05,640 best_value: 7982.0 median: 2676.0 mean: 2632.796
2024-02-20 21:41:05,640 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:08,909 Finished generation: 241 Max generations: 1000
2024-02-20 21:41:08,910 best_value: 7982.0 median: 2991.0 mean: 2749.98
2024-02-20 21:41:08,910 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:12,006 Finished generation: 242 Max generations: 1000
2024-02-20 21:41:12,007 best_value: 7982.0 median: 2991.0 mean: 2732.508
2024-02-20 21:41:12,008 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:15,114 Finished generation: 243 Max generations: 1000
2024-02-20 21:41:15,115 best_value: 7982.0 median: 2991.0 mean: 2796.66
2024-02-20 21:41:15,116 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:18,307 Finished generation: 244 Max generations: 1000
2024-02-20 21:41:18,307 best_value: 7982.0 median: 2991.0 mean: 2840.232
2024-02-20 21:41:18,308 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:21,421 Finished generation: 245 Max generations: 1000
2024-02-20 21:41:21,421 best_value: 7982.0 median: 2680.0 mean: 2764.38
2024-02-20 21:41:21,421 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:24,259 Finished generation: 246 Max generations: 1000
2024-02-20 21:41:24,260 best_value: 7982.0 median: 0.0 mean: 2569.964
2024-02-20 21:41:24,261 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:27,202 Finished generation: 247 Max generations: 1000
2024-02-20 21:41:27,204 best_value: 7982.0 median: 2676.0 mean: 2677.304
2024-02-20 21:41:27,204 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:30,189 Finished generation: 248 Max generations: 1000
2024-02-20 21:41:30,190 best_value: 7982.0 median: 2676.0 mean: 2777.928
2024-02-20 21:41:30,190 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:33,229 Finished generation: 249 Max generations: 1000
2024-02-20 21:41:33,229 best_value: 7982.0 median: 2676.0 mean: 2872.848
2024-02-20 21:41:33,230 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:36,283 Finished generation: 250 Max generations: 1000
2024-02-20 21:41:36,284 best_value: 7982.0 median: 2677.0 mean: 2872.496
2024-02-20 21:41:36,285 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:39,286 Finished generation: 251 Max generations: 1000
2024-02-20 21:41:39,288 best_value: 7982.0 median: 0.0 mean: 2680.048
2024-02-20 21:41:39,288 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:42,218 Finished generation: 252 Max generations: 1000
2024-02-20 21:41:42,219 best_value: 7982.0 median: 0.0 mean: 2579.708
2024-02-20 21:41:42,219 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:45,451 Finished generation: 253 Max generations: 1000
2024-02-20 21:41:45,452 best_value: 7982.0 median: 0.0 mean: 2624.048
2024-02-20 21:41:45,453 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:48,399 Finished generation: 254 Max generations: 1000
2024-02-20 21:41:48,400 best_value: 7982.0 median: 0.0 mean: 2557.848
2024-02-20 21:41:48,401 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:51,537 Finished generation: 255 Max generations: 1000
2024-02-20 21:41:51,538 best_value: 7982.0 median: 0.0 mean: 2550.92
2024-02-20 21:41:51,539 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:54,527 Finished generation: 256 Max generations: 1000
2024-02-20 21:41:54,528 best_value: 7982.0 median: 0.0 mean: 2523.512
2024-02-20 21:41:54,528 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:41:57,613 Finished generation: 257 Max generations: 1000
2024-02-20 21:41:57,614 best_value: 7982.0 median: 0.0 mean: 2557.864
2024-02-20 21:41:57,614 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:00,728 Finished generation: 258 Max generations: 1000
2024-02-20 21:42:00,729 best_value: 7982.0 median: 2676.0 mean: 2610.584
2024-02-20 21:42:00,729 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:03,661 Finished generation: 259 Max generations: 1000
2024-02-20 21:42:03,662 best_value: 7982.0 median: 0.0 mean: 2466.804
2024-02-20 21:42:03,663 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:06,629 Finished generation: 260 Max generations: 1000
2024-02-20 21:42:06,631 best_value: 7982.0 median: 0.0 mean: 2467.836
2024-02-20 21:42:06,632 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:09,695 Finished generation: 261 Max generations: 1000
2024-02-20 21:42:09,695 best_value: 7982.0 median: 0.0 mean: 2500.472
2024-02-20 21:42:09,695 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:12,667 Finished generation: 262 Max generations: 1000
2024-02-20 21:42:12,669 best_value: 7982.0 median: 2671.0 mean: 2518.672
2024-02-20 21:42:12,670 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:15,597 Finished generation: 263 Max generations: 1000
2024-02-20 21:42:15,598 best_value: 7982.0 median: 0.0 mean: 2489.816
2024-02-20 21:42:15,598 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:18,489 Finished generation: 264 Max generations: 1000
2024-02-20 21:42:18,490 best_value: 7982.0 median: 0.0 mean: 2470.496
2024-02-20 21:42:18,490 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:21,356 Finished generation: 265 Max generations: 1000
2024-02-20 21:42:21,357 best_value: 7982.0 median: 0.0 mean: 2516.064
2024-02-20 21:42:21,357 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:24,285 Finished generation: 266 Max generations: 1000
2024-02-20 21:42:24,286 best_value: 7982.0 median: 64.0 mean: 2512.736
2024-02-20 21:42:24,287 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:27,386 Finished generation: 267 Max generations: 1000
2024-02-20 21:42:27,387 best_value: 7982.0 median: 2676.0 mean: 2610.288
2024-02-20 21:42:27,388 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:30,604 Finished generation: 268 Max generations: 1000
2024-02-20 21:42:30,604 best_value: 7982.0 median: 2676.0 mean: 2744.476
2024-02-20 21:42:30,605 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:33,751 Finished generation: 269 Max generations: 1000
2024-02-20 21:42:33,752 best_value: 7982.0 median: 2676.0 mean: 2711.316
2024-02-20 21:42:33,753 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:37,050 Finished generation: 270 Max generations: 1000
2024-02-20 21:42:37,051 best_value: 7982.0 median: 2676.0 mean: 2732.992
2024-02-20 21:42:37,051 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:40,351 Finished generation: 271 Max generations: 1000
2024-02-20 21:42:40,351 best_value: 7982.0 median: 2676.0 mean: 2706.508
2024-02-20 21:42:40,351 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:43,469 Finished generation: 272 Max generations: 1000
2024-02-20 21:42:43,470 best_value: 7982.0 median: 2676.0 mean: 2661.48
2024-02-20 21:42:43,470 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:46,493 Finished generation: 273 Max generations: 1000
2024-02-20 21:42:46,495 best_value: 7982.0 median: 252.0 mean: 2548.612
2024-02-20 21:42:46,495 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:49,739 Finished generation: 274 Max generations: 1000
2024-02-20 21:42:49,739 best_value: 7982.0 median: 0.0 mean: 2505.328
2024-02-20 21:42:49,740 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:52,844 Finished generation: 275 Max generations: 1000
2024-02-20 21:42:52,844 best_value: 7982.0 median: 690.0 mean: 2532.384
2024-02-20 21:42:52,845 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:55,831 Finished generation: 276 Max generations: 1000
2024-02-20 21:42:55,832 best_value: 7982.0 median: 690.0 mean: 2556.52
2024-02-20 21:42:55,833 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:42:58,807 Finished generation: 277 Max generations: 1000
2024-02-20 21:42:58,808 best_value: 7982.0 median: 252.0 mean: 2578.532
2024-02-20 21:42:58,809 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:01,896 Finished generation: 278 Max generations: 1000
2024-02-20 21:43:01,897 best_value: 7982.0 median: 1482.0 mean: 2610.612
2024-02-20 21:43:01,897 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:04,946 Finished generation: 279 Max generations: 1000
2024-02-20 21:43:04,947 best_value: 7982.0 median: 420.0 mean: 2575.14
2024-02-20 21:43:04,947 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:08,179 Finished generation: 280 Max generations: 1000
2024-02-20 21:43:08,180 best_value: 7982.0 median: 2991.0 mean: 2793.208
2024-02-20 21:43:08,180 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:11,338 Finished generation: 281 Max generations: 1000
2024-02-20 21:43:11,339 best_value: 7982.0 median: 2676.0 mean: 2682.824
2024-02-20 21:43:11,339 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:14,448 Finished generation: 282 Max generations: 1000
2024-02-20 21:43:14,449 best_value: 7982.0 median: 400.0 mean: 2650.944
2024-02-20 21:43:14,449 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:17,551 Finished generation: 283 Max generations: 1000
2024-02-20 21:43:17,552 best_value: 7982.0 median: 1777.0 mean: 2667.036
2024-02-20 21:43:17,553 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:20,591 Finished generation: 284 Max generations: 1000
2024-02-20 21:43:20,592 best_value: 7982.0 median: 0.0 mean: 2600.32
2024-02-20 21:43:20,592 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:23,726 Finished generation: 285 Max generations: 1000
2024-02-20 21:43:23,726 best_value: 7982.0 median: 0.0 mean: 2594.74
2024-02-20 21:43:23,727 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:26,886 Finished generation: 286 Max generations: 1000
2024-02-20 21:43:26,887 best_value: 7982.0 median: 0.0 mean: 2642.208
2024-02-20 21:43:26,888 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:30,006 Finished generation: 287 Max generations: 1000
2024-02-20 21:43:30,006 best_value: 7982.0 median: 0.0 mean: 2463.512
2024-02-20 21:43:30,007 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:33,339 Finished generation: 288 Max generations: 1000
2024-02-20 21:43:33,340 best_value: 7982.0 median: 0.0 mean: 2494.9
2024-02-20 21:43:33,340 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:36,238 Finished generation: 289 Max generations: 1000
2024-02-20 21:43:36,239 best_value: 7982.0 median: 0.0 mean: 2495.132
2024-02-20 21:43:36,240 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:39,198 Finished generation: 290 Max generations: 1000
2024-02-20 21:43:39,199 best_value: 7982.0 median: 0.0 mean: 2384.2
2024-02-20 21:43:39,199 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:42,128 Finished generation: 291 Max generations: 1000
2024-02-20 21:43:42,129 best_value: 7982.0 median: 0.0 mean: 2438.464
2024-02-20 21:43:42,129 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:44,944 Finished generation: 292 Max generations: 1000
2024-02-20 21:43:44,944 best_value: 7982.0 median: 0.0 mean: 2389.268
2024-02-20 21:43:44,944 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:47,836 Finished generation: 293 Max generations: 1000
2024-02-20 21:43:47,837 best_value: 7982.0 median: 0.0 mean: 2403.656
2024-02-20 21:43:47,837 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:50,810 Finished generation: 294 Max generations: 1000
2024-02-20 21:43:50,812 best_value: 7982.0 median: 0.0 mean: 2524.704
2024-02-20 21:43:50,812 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:53,655 Finished generation: 295 Max generations: 1000
2024-02-20 21:43:53,656 best_value: 7982.0 median: 0.0 mean: 2455.828
2024-02-20 21:43:53,657 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:56,413 Finished generation: 296 Max generations: 1000
2024-02-20 21:43:56,414 best_value: 7982.0 median: 0.0 mean: 2331.58
2024-02-20 21:43:56,414 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:43:59,175 Finished generation: 297 Max generations: 1000
2024-02-20 21:43:59,176 best_value: 7982.0 median: 0.0 mean: 2299.404
2024-02-20 21:43:59,177 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:01,894 Finished generation: 298 Max generations: 1000
2024-02-20 21:44:01,894 best_value: 7982.0 median: 0.0 mean: 2335.128
2024-02-20 21:44:01,895 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:04,589 Finished generation: 299 Max generations: 1000
2024-02-20 21:44:04,590 best_value: 7982.0 median: 0.0 mean: 2307.604
2024-02-20 21:44:04,590 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:07,489 Finished generation: 300 Max generations: 1000
2024-02-20 21:44:07,490 best_value: 7982.0 median: 0.0 mean: 2407.66
2024-02-20 21:44:07,490 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:10,257 Finished generation: 301 Max generations: 1000
2024-02-20 21:44:10,258 best_value: 7982.0 median: 0.0 mean: 2391.364
2024-02-20 21:44:10,258 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:13,026 Finished generation: 302 Max generations: 1000
2024-02-20 21:44:13,026 best_value: 7982.0 median: 0.0 mean: 2380.876
2024-02-20 21:44:13,027 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:15,715 Finished generation: 303 Max generations: 1000
2024-02-20 21:44:15,715 best_value: 7982.0 median: 0.0 mean: 2386.184
2024-02-20 21:44:15,716 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:18,485 Finished generation: 304 Max generations: 1000
2024-02-20 21:44:18,486 best_value: 7982.0 median: 0.0 mean: 2403.224
2024-02-20 21:44:18,487 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:21,242 Finished generation: 305 Max generations: 1000
2024-02-20 21:44:21,242 best_value: 7982.0 median: 0.0 mean: 2391.804
2024-02-20 21:44:21,243 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.6 ), (4.6)], [math.log(abs(math.log(abs(0.9+math.log(abs((math.log(abs(5.9))))))))), (9.3), math.log(abs(+9.3))], [8.2, (2.0), math.sin(math.log(abs(0.1))*+3.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:23,955 Finished generation: 306 Max generations: 1000
2024-02-20 21:44:23,955 best_value: 8180.0 median: 0.0 mean: 2324.364
2024-02-20 21:44:23,955 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:26,803 Finished generation: 307 Max generations: 1000
2024-02-20 21:44:26,804 best_value: 8180.0 median: 0.0 mean: 2412.3
2024-02-20 21:44:26,804 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:29,690 Finished generation: 308 Max generations: 1000
2024-02-20 21:44:29,691 best_value: 8180.0 median: 0.0 mean: 2461.38
2024-02-20 21:44:29,691 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:32,543 Finished generation: 309 Max generations: 1000
2024-02-20 21:44:32,544 best_value: 8180.0 median: 0.0 mean: 2437.116
2024-02-20 21:44:32,544 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:35,498 Finished generation: 310 Max generations: 1000
2024-02-20 21:44:35,498 best_value: 8180.0 median: 2676.0 mean: 2516.108
2024-02-20 21:44:35,499 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:38,580 Finished generation: 311 Max generations: 1000
2024-02-20 21:44:38,581 best_value: 8180.0 median: 2676.0 mean: 2598.3
2024-02-20 21:44:38,581 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:41,635 Finished generation: 312 Max generations: 1000
2024-02-20 21:44:41,635 best_value: 8180.0 median: 2676.0 mean: 2594.724
2024-02-20 21:44:41,636 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:44,684 Finished generation: 313 Max generations: 1000
2024-02-20 21:44:44,684 best_value: 8180.0 median: 0.0 mean: 2532.68
2024-02-20 21:44:44,685 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:47,716 Finished generation: 314 Max generations: 1000
2024-02-20 21:44:47,717 best_value: 8180.0 median: 0.0 mean: 2492.164
2024-02-20 21:44:47,719 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:50,844 Finished generation: 315 Max generations: 1000
2024-02-20 21:44:50,845 best_value: 8180.0 median: 0.0 mean: 2513.216
2024-02-20 21:44:50,845 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:53,818 Finished generation: 316 Max generations: 1000
2024-02-20 21:44:53,819 best_value: 8180.0 median: 0.0 mean: 2507.596
2024-02-20 21:44:53,819 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:44:56,845 Finished generation: 317 Max generations: 1000
2024-02-20 21:44:56,846 best_value: 8180.0 median: 0.0 mean: 2578.332
2024-02-20 21:44:56,846 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:00,147 Finished generation: 318 Max generations: 1000
2024-02-20 21:45:00,148 best_value: 8180.0 median: 2666.0 mean: 2702.2
2024-02-20 21:45:00,148 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:03,366 Finished generation: 319 Max generations: 1000
2024-02-20 21:45:03,367 best_value: 8180.0 median: 113.0 mean: 2652.436
2024-02-20 21:45:03,367 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:06,760 Finished generation: 320 Max generations: 1000
2024-02-20 21:45:06,760 best_value: 8180.0 median: 2676.0 mean: 2794.44
2024-02-20 21:45:06,760 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:10,244 Finished generation: 321 Max generations: 1000
2024-02-20 21:45:10,245 best_value: 8180.0 median: 2676.0 mean: 2751.716
2024-02-20 21:45:10,246 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:13,773 Finished generation: 322 Max generations: 1000
2024-02-20 21:45:13,774 best_value: 8180.0 median: 2676.0 mean: 2776.472
2024-02-20 21:45:13,774 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:17,082 Finished generation: 323 Max generations: 1000
2024-02-20 21:45:17,082 best_value: 8180.0 median: 2676.0 mean: 2713.508
2024-02-20 21:45:17,083 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:20,291 Finished generation: 324 Max generations: 1000
2024-02-20 21:45:20,292 best_value: 8180.0 median: 0.0 mean: 2607.784
2024-02-20 21:45:20,293 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:23,549 Finished generation: 325 Max generations: 1000
2024-02-20 21:45:23,549 best_value: 8180.0 median: 606.0 mean: 2644.488
2024-02-20 21:45:23,550 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:26,764 Finished generation: 326 Max generations: 1000
2024-02-20 21:45:26,766 best_value: 8180.0 median: 0.0 mean: 2567.08
2024-02-20 21:45:26,766 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:30,101 Finished generation: 327 Max generations: 1000
2024-02-20 21:45:30,103 best_value: 8180.0 median: 0.0 mean: 2652.456
2024-02-20 21:45:30,103 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:33,173 Finished generation: 328 Max generations: 1000
2024-02-20 21:45:33,174 best_value: 8180.0 median: 0.0 mean: 2514.936
2024-02-20 21:45:33,174 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:36,634 Finished generation: 329 Max generations: 1000
2024-02-20 21:45:36,635 best_value: 8180.0 median: 0.0 mean: 2539.892
2024-02-20 21:45:36,636 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:40,194 Finished generation: 330 Max generations: 1000
2024-02-20 21:45:40,196 best_value: 8180.0 median: 2467.0 mean: 2543.892
2024-02-20 21:45:40,196 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:43,745 Finished generation: 331 Max generations: 1000
2024-02-20 21:45:43,746 best_value: 8180.0 median: 2676.0 mean: 2575.796
2024-02-20 21:45:43,747 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:47,193 Finished generation: 332 Max generations: 1000
2024-02-20 21:45:47,194 best_value: 8180.0 median: 0.0 mean: 2490.604
2024-02-20 21:45:47,194 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:50,503 Finished generation: 333 Max generations: 1000
2024-02-20 21:45:50,504 best_value: 8180.0 median: 0.0 mean: 2380.464
2024-02-20 21:45:50,505 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:53,787 Finished generation: 334 Max generations: 1000
2024-02-20 21:45:53,788 best_value: 8180.0 median: 0.0 mean: 2350.976
2024-02-20 21:45:53,789 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:45:57,030 Finished generation: 335 Max generations: 1000
2024-02-20 21:45:57,031 best_value: 8180.0 median: 0.0 mean: 2328.152
2024-02-20 21:45:57,031 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:00,365 Finished generation: 336 Max generations: 1000
2024-02-20 21:46:00,366 best_value: 8180.0 median: 0.0 mean: 2397.468
2024-02-20 21:46:00,366 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:03,666 Finished generation: 337 Max generations: 1000
2024-02-20 21:46:03,667 best_value: 8180.0 median: 0.0 mean: 2393.944
2024-02-20 21:46:03,667 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:06,781 Finished generation: 338 Max generations: 1000
2024-02-20 21:46:06,782 best_value: 8180.0 median: 0.0 mean: 2338.784
2024-02-20 21:46:06,782 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:09,663 Finished generation: 339 Max generations: 1000
2024-02-20 21:46:09,664 best_value: 8180.0 median: 0.0 mean: 2375.444
2024-02-20 21:46:09,664 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:12,615 Finished generation: 340 Max generations: 1000
2024-02-20 21:46:12,616 best_value: 8180.0 median: 0.0 mean: 2330.204
2024-02-20 21:46:12,616 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:15,685 Finished generation: 341 Max generations: 1000
2024-02-20 21:46:15,685 best_value: 8180.0 median: 0.0 mean: 2379.42
2024-02-20 21:46:15,686 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:18,813 Finished generation: 342 Max generations: 1000
2024-02-20 21:46:18,814 best_value: 8180.0 median: 0.0 mean: 2312.404
2024-02-20 21:46:18,814 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:21,314 Finished generation: 343 Max generations: 1000
2024-02-20 21:46:21,314 best_value: 8180.0 median: 0.0 mean: 2212.388
2024-02-20 21:46:21,315 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:23,852 Finished generation: 344 Max generations: 1000
2024-02-20 21:46:23,853 best_value: 8180.0 median: 0.0 mean: 2351.364
2024-02-20 21:46:23,853 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:26,292 Finished generation: 345 Max generations: 1000
2024-02-20 21:46:26,293 best_value: 8180.0 median: 0.0 mean: 2388.364
2024-02-20 21:46:26,294 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:28,558 Finished generation: 346 Max generations: 1000
2024-02-20 21:46:28,559 best_value: 8180.0 median: 0.0 mean: 2299.988
2024-02-20 21:46:28,559 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:30,720 Finished generation: 347 Max generations: 1000
2024-02-20 21:46:30,721 best_value: 8180.0 median: 0.0 mean: 2337.004
2024-02-20 21:46:30,721 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:33,181 Finished generation: 348 Max generations: 1000
2024-02-20 21:46:33,182 best_value: 8180.0 median: 0.0 mean: 2495.892
2024-02-20 21:46:33,182 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:35,577 Finished generation: 349 Max generations: 1000
2024-02-20 21:46:35,578 best_value: 8180.0 median: 0.0 mean: 2505.74
2024-02-20 21:46:35,578 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:37,768 Finished generation: 350 Max generations: 1000
2024-02-20 21:46:37,769 best_value: 8180.0 median: 0.0 mean: 2323.84
2024-02-20 21:46:37,769 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:39,976 Finished generation: 351 Max generations: 1000
2024-02-20 21:46:39,977 best_value: 8180.0 median: 0.0 mean: 2340.244
2024-02-20 21:46:39,977 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:42,399 Finished generation: 352 Max generations: 1000
2024-02-20 21:46:42,399 best_value: 8180.0 median: 2668.0 mean: 2505.732
2024-02-20 21:46:42,400 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:44,644 Finished generation: 353 Max generations: 1000
2024-02-20 21:46:44,645 best_value: 8180.0 median: 0.0 mean: 2364.54
2024-02-20 21:46:44,645 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:46,870 Finished generation: 354 Max generations: 1000
2024-02-20 21:46:46,870 best_value: 8180.0 median: 0.0 mean: 2360.3
2024-02-20 21:46:46,870 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:49,130 Finished generation: 355 Max generations: 1000
2024-02-20 21:46:49,130 best_value: 8180.0 median: 0.0 mean: 2348.184
2024-02-20 21:46:49,131 import numpy as np
import math
rules = np.array([[math.log(abs(((1.9)))), math.log(abs(0.9)), 7.6*(math.sin(0.5 ))], [((+math.log(abs(7.2)))), pow(math.sin((3.1) ), 9.9), 2.8], [1.2, 5.8, math.log(abs(math.log(abs((math.sin(math.sin(++((((+3.8)))) ) ))))))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:51,443 Finished generation: 356 Max generations: 1000
2024-02-20 21:46:51,444 best_value: 8315.0 median: 0.0 mean: 2390.74
2024-02-20 21:46:51,444 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:53,790 Finished generation: 357 Max generations: 1000
2024-02-20 21:46:53,791 best_value: 8315.0 median: 0.0 mean: 2448.692
2024-02-20 21:46:53,791 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:56,116 Finished generation: 358 Max generations: 1000
2024-02-20 21:46:56,117 best_value: 8315.0 median: 0.0 mean: 2484.852
2024-02-20 21:46:56,117 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:46:58,419 Finished generation: 359 Max generations: 1000
2024-02-20 21:46:58,419 best_value: 8315.0 median: 0.0 mean: 2463.728
2024-02-20 21:46:58,420 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:00,682 Finished generation: 360 Max generations: 1000
2024-02-20 21:47:00,682 best_value: 8315.0 median: 0.0 mean: 2402.784
2024-02-20 21:47:00,682 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:03,058 Finished generation: 361 Max generations: 1000
2024-02-20 21:47:03,059 best_value: 8315.0 median: 0.0 mean: 2513.236
2024-02-20 21:47:03,060 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:05,579 Finished generation: 362 Max generations: 1000
2024-02-20 21:47:05,580 best_value: 8315.0 median: 2676.0 mean: 2605.068
2024-02-20 21:47:05,580 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:07,983 Finished generation: 363 Max generations: 1000
2024-02-20 21:47:07,983 best_value: 8315.0 median: 0.0 mean: 2438.44
2024-02-20 21:47:07,983 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:10,270 Finished generation: 364 Max generations: 1000
2024-02-20 21:47:10,271 best_value: 8315.0 median: 0.0 mean: 2402.868
2024-02-20 21:47:10,271 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:12,570 Finished generation: 365 Max generations: 1000
2024-02-20 21:47:12,570 best_value: 8315.0 median: 0.0 mean: 2445.528
2024-02-20 21:47:12,571 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:14,882 Finished generation: 366 Max generations: 1000
2024-02-20 21:47:14,883 best_value: 8315.0 median: 0.0 mean: 2426.46
2024-02-20 21:47:14,883 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:17,096 Finished generation: 367 Max generations: 1000
2024-02-20 21:47:17,096 best_value: 8315.0 median: 0.0 mean: 2378.964
2024-02-20 21:47:17,097 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:19,371 Finished generation: 368 Max generations: 1000
2024-02-20 21:47:19,372 best_value: 8315.0 median: 0.0 mean: 2468.98
2024-02-20 21:47:19,372 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:21,679 Finished generation: 369 Max generations: 1000
2024-02-20 21:47:21,680 best_value: 8315.0 median: 0.0 mean: 2476.912
2024-02-20 21:47:21,680 import numpy as np
import math
rules = np.array([[1.2, math.sin(1.7 ), (4.1)], [math.log(abs(math.log(abs(((math.sin(math.sin(8.4 ) ))))))), 7.6, math.log(abs(5.7+9.9))], [5.4, (3.9), math.sin((-1.3-0.2) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:24,100 Finished generation: 370 Max generations: 1000
2024-02-20 21:47:24,101 best_value: 8341.0 median: 187.0 mean: 2589.964
2024-02-20 21:47:24,101 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:26,565 Finished generation: 371 Max generations: 1000
2024-02-20 21:47:26,566 best_value: 8341.0 median: 2676.0 mean: 2670.424
2024-02-20 21:47:26,566 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:29,034 Finished generation: 372 Max generations: 1000
2024-02-20 21:47:29,034 best_value: 8341.0 median: 2676.0 mean: 2651.1
2024-02-20 21:47:29,035 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:31,508 Finished generation: 373 Max generations: 1000
2024-02-20 21:47:31,509 best_value: 8341.0 median: 2676.0 mean: 2680.836
2024-02-20 21:47:31,509 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:33,836 Finished generation: 374 Max generations: 1000
2024-02-20 21:47:33,836 best_value: 8341.0 median: 0.0 mean: 2537.692
2024-02-20 21:47:33,836 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:36,231 Finished generation: 375 Max generations: 1000
2024-02-20 21:47:36,232 best_value: 8341.0 median: 0.0 mean: 2460.148
2024-02-20 21:47:36,232 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:38,618 Finished generation: 376 Max generations: 1000
2024-02-20 21:47:38,618 best_value: 8341.0 median: 0.0 mean: 2467.376
2024-02-20 21:47:38,619 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:40,996 Finished generation: 377 Max generations: 1000
2024-02-20 21:47:40,997 best_value: 8341.0 median: 0.0 mean: 2534.968
2024-02-20 21:47:40,997 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:43,323 Finished generation: 378 Max generations: 1000
2024-02-20 21:47:43,324 best_value: 8341.0 median: 0.0 mean: 2519.908
2024-02-20 21:47:43,324 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:45,818 Finished generation: 379 Max generations: 1000
2024-02-20 21:47:45,819 best_value: 8341.0 median: 2676.0 mean: 2657.16
2024-02-20 21:47:45,819 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:48,333 Finished generation: 380 Max generations: 1000
2024-02-20 21:47:48,334 best_value: 8341.0 median: 2676.0 mean: 2658.68
2024-02-20 21:47:48,334 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:50,753 Finished generation: 381 Max generations: 1000
2024-02-20 21:47:50,754 best_value: 8341.0 median: 2676.0 mean: 2650.232
2024-02-20 21:47:50,754 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:53,132 Finished generation: 382 Max generations: 1000
2024-02-20 21:47:53,132 best_value: 8341.0 median: 0.0 mean: 2576.464
2024-02-20 21:47:53,132 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:55,562 Finished generation: 383 Max generations: 1000
2024-02-20 21:47:55,562 best_value: 8341.0 median: 2676.0 mean: 2631.46
2024-02-20 21:47:55,563 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:47:58,064 Finished generation: 384 Max generations: 1000
2024-02-20 21:47:58,064 best_value: 8341.0 median: 2676.0 mean: 2717.5
2024-02-20 21:47:58,064 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:00,432 Finished generation: 385 Max generations: 1000
2024-02-20 21:48:00,432 best_value: 8341.0 median: 0.0 mean: 2604.7
2024-02-20 21:48:00,433 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:02,697 Finished generation: 386 Max generations: 1000
2024-02-20 21:48:02,698 best_value: 8341.0 median: 0.0 mean: 2560.8
2024-02-20 21:48:02,698 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:05,011 Finished generation: 387 Max generations: 1000
2024-02-20 21:48:05,011 best_value: 8341.0 median: 0.0 mean: 2590.884
2024-02-20 21:48:05,012 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:07,409 Finished generation: 388 Max generations: 1000
2024-02-20 21:48:07,410 best_value: 8341.0 median: 0.0 mean: 2649.376
2024-02-20 21:48:07,410 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:09,771 Finished generation: 389 Max generations: 1000
2024-02-20 21:48:09,772 best_value: 8341.0 median: 241.0 mean: 2710.04
2024-02-20 21:48:09,772 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:12,072 Finished generation: 390 Max generations: 1000
2024-02-20 21:48:12,072 best_value: 8341.0 median: 0.0 mean: 2704.412
2024-02-20 21:48:12,073 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:14,455 Finished generation: 391 Max generations: 1000
2024-02-20 21:48:14,456 best_value: 8341.0 median: 0.0 mean: 2681.672
2024-02-20 21:48:14,456 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:16,840 Finished generation: 392 Max generations: 1000
2024-02-20 21:48:16,841 best_value: 8341.0 median: 0.0 mean: 2633.2
2024-02-20 21:48:16,841 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:19,210 Finished generation: 393 Max generations: 1000
2024-02-20 21:48:19,210 best_value: 8341.0 median: 0.0 mean: 2684.448
2024-02-20 21:48:19,211 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:21,486 Finished generation: 394 Max generations: 1000
2024-02-20 21:48:21,486 best_value: 8341.0 median: 0.0 mean: 2584.132
2024-02-20 21:48:21,487 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:23,789 Finished generation: 395 Max generations: 1000
2024-02-20 21:48:23,789 best_value: 8341.0 median: 0.0 mean: 2640.596
2024-02-20 21:48:23,790 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:26,004 Finished generation: 396 Max generations: 1000
2024-02-20 21:48:26,005 best_value: 8341.0 median: 0.0 mean: 2564.364
2024-02-20 21:48:26,005 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:28,471 Finished generation: 397 Max generations: 1000
2024-02-20 21:48:28,472 best_value: 8341.0 median: 0.0 mean: 2729.776
2024-02-20 21:48:28,472 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:31,148 Finished generation: 398 Max generations: 1000
2024-02-20 21:48:31,149 best_value: 8341.0 median: 0.0 mean: 2675.452
2024-02-20 21:48:31,149 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:33,731 Finished generation: 399 Max generations: 1000
2024-02-20 21:48:33,732 best_value: 8341.0 median: 2676.0 mean: 2825.984
2024-02-20 21:48:33,732 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:36,209 Finished generation: 400 Max generations: 1000
2024-02-20 21:48:36,210 best_value: 8341.0 median: 2676.0 mean: 2845.028
2024-02-20 21:48:36,210 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:38,623 Finished generation: 401 Max generations: 1000
2024-02-20 21:48:38,623 best_value: 8341.0 median: 0.0 mean: 2743.488
2024-02-20 21:48:38,624 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:40,971 Finished generation: 402 Max generations: 1000
2024-02-20 21:48:40,972 best_value: 8341.0 median: 0.0 mean: 2652.444
2024-02-20 21:48:40,972 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:43,188 Finished generation: 403 Max generations: 1000
2024-02-20 21:48:43,188 best_value: 8341.0 median: 0.0 mean: 2618.42
2024-02-20 21:48:43,188 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:45,582 Finished generation: 404 Max generations: 1000
2024-02-20 21:48:45,583 best_value: 8341.0 median: 0.0 mean: 2648.22
2024-02-20 21:48:45,583 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:47,938 Finished generation: 405 Max generations: 1000
2024-02-20 21:48:47,939 best_value: 8341.0 median: 0.0 mean: 2590.548
2024-02-20 21:48:47,939 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:50,214 Finished generation: 406 Max generations: 1000
2024-02-20 21:48:50,215 best_value: 8341.0 median: 0.0 mean: 2606.784
2024-02-20 21:48:50,215 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:52,824 Finished generation: 407 Max generations: 1000
2024-02-20 21:48:52,825 best_value: 8341.0 median: 2676.0 mean: 2783.46
2024-02-20 21:48:52,825 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:55,296 Finished generation: 408 Max generations: 1000
2024-02-20 21:48:55,297 best_value: 8341.0 median: 2676.0 mean: 2711.664
2024-02-20 21:48:55,297 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:48:57,673 Finished generation: 409 Max generations: 1000
2024-02-20 21:48:57,673 best_value: 8341.0 median: 0.0 mean: 2609.7
2024-02-20 21:48:57,674 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:00,124 Finished generation: 410 Max generations: 1000
2024-02-20 21:49:00,124 best_value: 8341.0 median: 2665.0 mean: 2670.984
2024-02-20 21:49:00,124 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:02,518 Finished generation: 411 Max generations: 1000
2024-02-20 21:49:02,519 best_value: 8341.0 median: 0.0 mean: 2633.396
2024-02-20 21:49:02,519 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:04,954 Finished generation: 412 Max generations: 1000
2024-02-20 21:49:04,955 best_value: 8341.0 median: 0.0 mean: 2649.368
2024-02-20 21:49:04,955 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:07,365 Finished generation: 413 Max generations: 1000
2024-02-20 21:49:07,366 best_value: 8341.0 median: 0.0 mean: 2658.964
2024-02-20 21:49:07,366 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:09,871 Finished generation: 414 Max generations: 1000
2024-02-20 21:49:09,872 best_value: 8341.0 median: 1090.0 mean: 2747.176
2024-02-20 21:49:09,872 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:12,477 Finished generation: 415 Max generations: 1000
2024-02-20 21:49:12,478 best_value: 8341.0 median: 2.0 mean: 2682.284
2024-02-20 21:49:12,478 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:15,092 Finished generation: 416 Max generations: 1000
2024-02-20 21:49:15,093 best_value: 8341.0 median: 2676.0 mean: 2762.816
2024-02-20 21:49:15,093 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:17,547 Finished generation: 417 Max generations: 1000
2024-02-20 21:49:17,547 best_value: 8341.0 median: 0.0 mean: 2610.936
2024-02-20 21:49:17,548 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:20,040 Finished generation: 418 Max generations: 1000
2024-02-20 21:49:20,040 best_value: 8341.0 median: 0.0 mean: 2546.268
2024-02-20 21:49:20,041 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:22,588 Finished generation: 419 Max generations: 1000
2024-02-20 21:49:22,588 best_value: 8341.0 median: 0.0 mean: 2609.364
2024-02-20 21:49:22,589 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:25,137 Finished generation: 420 Max generations: 1000
2024-02-20 21:49:25,138 best_value: 8341.0 median: 2676.0 mean: 2697.16
2024-02-20 21:49:25,138 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:27,804 Finished generation: 421 Max generations: 1000
2024-02-20 21:49:27,805 best_value: 8341.0 median: 2676.0 mean: 2779.5
2024-02-20 21:49:27,805 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:30,488 Finished generation: 422 Max generations: 1000
2024-02-20 21:49:30,489 best_value: 8341.0 median: 2824.0 mean: 2866.684
2024-02-20 21:49:30,489 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:33,257 Finished generation: 423 Max generations: 1000
2024-02-20 21:49:33,257 best_value: 8341.0 median: 2732.0 mean: 2863.624
2024-02-20 21:49:33,258 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:35,994 Finished generation: 424 Max generations: 1000
2024-02-20 21:49:35,995 best_value: 8341.0 median: 2676.0 mean: 2797.42
2024-02-20 21:49:35,995 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:38,685 Finished generation: 425 Max generations: 1000
2024-02-20 21:49:38,686 best_value: 8341.0 median: 2676.0 mean: 2833.804
2024-02-20 21:49:38,686 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:41,289 Finished generation: 426 Max generations: 1000
2024-02-20 21:49:41,289 best_value: 8341.0 median: 2676.0 mean: 2794.068
2024-02-20 21:49:41,289 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:43,881 Finished generation: 427 Max generations: 1000
2024-02-20 21:49:43,881 best_value: 8341.0 median: 2676.0 mean: 2851.808
2024-02-20 21:49:43,881 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:46,358 Finished generation: 428 Max generations: 1000
2024-02-20 21:49:46,359 best_value: 8341.0 median: 25.0 mean: 2730.476
2024-02-20 21:49:46,359 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:48,840 Finished generation: 429 Max generations: 1000
2024-02-20 21:49:48,840 best_value: 8341.0 median: 26.0 mean: 2664.432
2024-02-20 21:49:48,841 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:51,367 Finished generation: 430 Max generations: 1000
2024-02-20 21:49:51,368 best_value: 8341.0 median: 14.0 mean: 2661.58
2024-02-20 21:49:51,368 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:53,970 Finished generation: 431 Max generations: 1000
2024-02-20 21:49:53,971 best_value: 8341.0 median: 88.0 mean: 2632.124
2024-02-20 21:49:53,971 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:56,523 Finished generation: 432 Max generations: 1000
2024-02-20 21:49:56,524 best_value: 8341.0 median: 0.0 mean: 2616.332
2024-02-20 21:49:56,524 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:49:59,113 Finished generation: 433 Max generations: 1000
2024-02-20 21:49:59,113 best_value: 8341.0 median: 0.0 mean: 2636.044
2024-02-20 21:49:59,113 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:01,607 Finished generation: 434 Max generations: 1000
2024-02-20 21:50:01,608 best_value: 8341.0 median: 0.0 mean: 2576.996
2024-02-20 21:50:01,608 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:04,109 Finished generation: 435 Max generations: 1000
2024-02-20 21:50:04,110 best_value: 8341.0 median: 0.0 mean: 2499.756
2024-02-20 21:50:04,110 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:06,679 Finished generation: 436 Max generations: 1000
2024-02-20 21:50:06,679 best_value: 8341.0 median: 0.0 mean: 2537.924
2024-02-20 21:50:06,680 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:09,412 Finished generation: 437 Max generations: 1000
2024-02-20 21:50:09,413 best_value: 8341.0 median: 2676.0 mean: 2644.94
2024-02-20 21:50:09,413 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:12,068 Finished generation: 438 Max generations: 1000
2024-02-20 21:50:12,069 best_value: 8341.0 median: 2676.0 mean: 2690.876
2024-02-20 21:50:12,069 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:14,750 Finished generation: 439 Max generations: 1000
2024-02-20 21:50:14,751 best_value: 8341.0 median: 2676.0 mean: 2645.3
2024-02-20 21:50:14,752 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:17,438 Finished generation: 440 Max generations: 1000
2024-02-20 21:50:17,439 best_value: 8341.0 median: 2676.0 mean: 2675.448
2024-02-20 21:50:17,439 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:20,075 Finished generation: 441 Max generations: 1000
2024-02-20 21:50:20,076 best_value: 8341.0 median: 1544.0 mean: 2590.912
2024-02-20 21:50:20,076 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:22,792 Finished generation: 442 Max generations: 1000
2024-02-20 21:50:22,793 best_value: 8341.0 median: 2676.0 mean: 2636.7
2024-02-20 21:50:22,793 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:25,577 Finished generation: 443 Max generations: 1000
2024-02-20 21:50:25,577 best_value: 8341.0 median: 2676.0 mean: 2695.724
2024-02-20 21:50:25,578 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:28,339 Finished generation: 444 Max generations: 1000
2024-02-20 21:50:28,339 best_value: 8341.0 median: 2676.0 mean: 2715.424
2024-02-20 21:50:28,340 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:31,218 Finished generation: 445 Max generations: 1000
2024-02-20 21:50:31,219 best_value: 8341.0 median: 2991.0 mean: 2792.864
2024-02-20 21:50:31,219 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:33,914 Finished generation: 446 Max generations: 1000
2024-02-20 21:50:33,915 best_value: 8341.0 median: 2676.0 mean: 2768.012
2024-02-20 21:50:33,915 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:36,423 Finished generation: 447 Max generations: 1000
2024-02-20 21:50:36,424 best_value: 8341.0 median: 2615.0 mean: 2659.208
2024-02-20 21:50:36,424 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:38,864 Finished generation: 448 Max generations: 1000
2024-02-20 21:50:38,865 best_value: 8341.0 median: 0.0 mean: 2508.74
2024-02-20 21:50:38,865 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:41,419 Finished generation: 449 Max generations: 1000
2024-02-20 21:50:41,420 best_value: 8341.0 median: 2676.0 mean: 2602.888
2024-02-20 21:50:41,421 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:44,010 Finished generation: 450 Max generations: 1000
2024-02-20 21:50:44,011 best_value: 8341.0 median: 2676.0 mean: 2677.036
2024-02-20 21:50:44,011 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:46,628 Finished generation: 451 Max generations: 1000
2024-02-20 21:50:46,629 best_value: 8341.0 median: 2676.0 mean: 2733.332
2024-02-20 21:50:46,629 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:49,270 Finished generation: 452 Max generations: 1000
2024-02-20 21:50:49,271 best_value: 8341.0 median: 2676.0 mean: 2722.768
2024-02-20 21:50:49,271 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:51,839 Finished generation: 453 Max generations: 1000
2024-02-20 21:50:51,840 best_value: 8341.0 median: 2676.0 mean: 2707.88
2024-02-20 21:50:51,840 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:54,369 Finished generation: 454 Max generations: 1000
2024-02-20 21:50:54,370 best_value: 8341.0 median: 2676.0 mean: 2698.552
2024-02-20 21:50:54,370 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:57,040 Finished generation: 455 Max generations: 1000
2024-02-20 21:50:57,043 best_value: 8341.0 median: 2677.0 mean: 2826.32
2024-02-20 21:50:57,044 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:50:59,611 Finished generation: 456 Max generations: 1000
2024-02-20 21:50:59,612 best_value: 8341.0 median: 2676.0 mean: 2629.356
2024-02-20 21:50:59,613 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:02,121 Finished generation: 457 Max generations: 1000
2024-02-20 21:51:02,122 best_value: 8341.0 median: 2676.0 mean: 2673.244
2024-02-20 21:51:02,122 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:04,623 Finished generation: 458 Max generations: 1000
2024-02-20 21:51:04,624 best_value: 8341.0 median: 0.0 mean: 2619.136
2024-02-20 21:51:04,624 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:07,093 Finished generation: 459 Max generations: 1000
2024-02-20 21:51:07,094 best_value: 8341.0 median: 2676.0 mean: 2659.216
2024-02-20 21:51:07,094 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:09,665 Finished generation: 460 Max generations: 1000
2024-02-20 21:51:09,666 best_value: 8341.0 median: 2676.0 mean: 2731.856
2024-02-20 21:51:09,666 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:12,214 Finished generation: 461 Max generations: 1000
2024-02-20 21:51:12,214 best_value: 8341.0 median: 2676.0 mean: 2696.132
2024-02-20 21:51:12,215 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:14,748 Finished generation: 462 Max generations: 1000
2024-02-20 21:51:14,749 best_value: 8341.0 median: 2676.0 mean: 2726.128
2024-02-20 21:51:14,749 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:17,281 Finished generation: 463 Max generations: 1000
2024-02-20 21:51:17,282 best_value: 8341.0 median: 0.0 mean: 2632.004
2024-02-20 21:51:17,282 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:19,827 Finished generation: 464 Max generations: 1000
2024-02-20 21:51:19,828 best_value: 8341.0 median: 0.0 mean: 2593.18
2024-02-20 21:51:19,829 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:22,320 Finished generation: 465 Max generations: 1000
2024-02-20 21:51:22,321 best_value: 8341.0 median: 0.0 mean: 2526.164
2024-02-20 21:51:22,321 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:24,926 Finished generation: 466 Max generations: 1000
2024-02-20 21:51:24,926 best_value: 8341.0 median: 2091.0 mean: 2626.58
2024-02-20 21:51:24,927 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:27,580 Finished generation: 467 Max generations: 1000
2024-02-20 21:51:27,581 best_value: 8341.0 median: 2676.0 mean: 2704.26
2024-02-20 21:51:27,581 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:30,347 Finished generation: 468 Max generations: 1000
2024-02-20 21:51:30,348 best_value: 8341.0 median: 2676.0 mean: 2778.624
2024-02-20 21:51:30,348 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:33,038 Finished generation: 469 Max generations: 1000
2024-02-20 21:51:33,039 best_value: 8341.0 median: 2676.0 mean: 2695.624
2024-02-20 21:51:33,040 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:35,747 Finished generation: 470 Max generations: 1000
2024-02-20 21:51:35,748 best_value: 8341.0 median: 2676.0 mean: 2758.296
2024-02-20 21:51:35,748 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:38,430 Finished generation: 471 Max generations: 1000
2024-02-20 21:51:38,431 best_value: 8341.0 median: 2676.0 mean: 2675.372
2024-02-20 21:51:38,432 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:40,979 Finished generation: 472 Max generations: 1000
2024-02-20 21:51:40,979 best_value: 8341.0 median: 2676.0 mean: 2645.98
2024-02-20 21:51:40,980 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:43,572 Finished generation: 473 Max generations: 1000
2024-02-20 21:51:43,573 best_value: 8341.0 median: 585.0 mean: 2553.636
2024-02-20 21:51:43,573 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:46,025 Finished generation: 474 Max generations: 1000
2024-02-20 21:51:46,025 best_value: 8341.0 median: 0.0 mean: 2466.268
2024-02-20 21:51:46,026 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:48,581 Finished generation: 475 Max generations: 1000
2024-02-20 21:51:48,582 best_value: 8341.0 median: 0.0 mean: 2532.256
2024-02-20 21:51:48,582 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:51,185 Finished generation: 476 Max generations: 1000
2024-02-20 21:51:51,185 best_value: 8341.0 median: 1226.0 mean: 2594.96
2024-02-20 21:51:51,186 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:53,858 Finished generation: 477 Max generations: 1000
2024-02-20 21:51:53,859 best_value: 8341.0 median: 2676.0 mean: 2652.736
2024-02-20 21:51:53,859 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:56,398 Finished generation: 478 Max generations: 1000
2024-02-20 21:51:56,398 best_value: 8341.0 median: 0.0 mean: 2605.304
2024-02-20 21:51:56,398 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:51:59,059 Finished generation: 479 Max generations: 1000
2024-02-20 21:51:59,059 best_value: 8341.0 median: 2676.0 mean: 2659.656
2024-02-20 21:51:59,060 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:01,726 Finished generation: 480 Max generations: 1000
2024-02-20 21:52:01,727 best_value: 8341.0 median: 2676.0 mean: 2611.808
2024-02-20 21:52:01,727 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:04,268 Finished generation: 481 Max generations: 1000
2024-02-20 21:52:04,269 best_value: 8341.0 median: 0.0 mean: 2496.828
2024-02-20 21:52:04,269 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:06,843 Finished generation: 482 Max generations: 1000
2024-02-20 21:52:06,844 best_value: 8341.0 median: 2676.0 mean: 2568.444
2024-02-20 21:52:06,844 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:09,568 Finished generation: 483 Max generations: 1000
2024-02-20 21:52:09,568 best_value: 8341.0 median: 2676.0 mean: 2665.232
2024-02-20 21:52:09,569 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:12,122 Finished generation: 484 Max generations: 1000
2024-02-20 21:52:12,123 best_value: 8341.0 median: 0.0 mean: 2493.076
2024-02-20 21:52:12,123 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:14,683 Finished generation: 485 Max generations: 1000
2024-02-20 21:52:14,683 best_value: 8341.0 median: 0.0 mean: 2540.108
2024-02-20 21:52:14,683 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:17,191 Finished generation: 486 Max generations: 1000
2024-02-20 21:52:17,192 best_value: 8341.0 median: 0.0 mean: 2554.264
2024-02-20 21:52:17,193 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:19,721 Finished generation: 487 Max generations: 1000
2024-02-20 21:52:19,723 best_value: 8341.0 median: 0.0 mean: 2475.576
2024-02-20 21:52:19,723 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:22,244 Finished generation: 488 Max generations: 1000
2024-02-20 21:52:22,245 best_value: 8341.0 median: 0.0 mean: 2431.38
2024-02-20 21:52:22,245 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:24,745 Finished generation: 489 Max generations: 1000
2024-02-20 21:52:24,746 best_value: 8341.0 median: 0.0 mean: 2469.768
2024-02-20 21:52:24,746 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:27,341 Finished generation: 490 Max generations: 1000
2024-02-20 21:52:27,342 best_value: 8341.0 median: 2553.0 mean: 2559.236
2024-02-20 21:52:27,343 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:29,931 Finished generation: 491 Max generations: 1000
2024-02-20 21:52:29,931 best_value: 8341.0 median: 0.0 mean: 2464.336
2024-02-20 21:52:29,931 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:32,432 Finished generation: 492 Max generations: 1000
2024-02-20 21:52:32,433 best_value: 8341.0 median: 0.0 mean: 2452.068
2024-02-20 21:52:32,434 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:34,919 Finished generation: 493 Max generations: 1000
2024-02-20 21:52:34,920 best_value: 8341.0 median: 0.0 mean: 2514.184
2024-02-20 21:52:34,920 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:37,497 Finished generation: 494 Max generations: 1000
2024-02-20 21:52:37,498 best_value: 8341.0 median: 0.0 mean: 2517.068
2024-02-20 21:52:37,498 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:39,965 Finished generation: 495 Max generations: 1000
2024-02-20 21:52:39,966 best_value: 8341.0 median: 0.0 mean: 2414.444
2024-02-20 21:52:39,966 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:42,334 Finished generation: 496 Max generations: 1000
2024-02-20 21:52:42,334 best_value: 8341.0 median: 0.0 mean: 2364.932
2024-02-20 21:52:42,335 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:44,713 Finished generation: 497 Max generations: 1000
2024-02-20 21:52:44,714 best_value: 8341.0 median: 0.0 mean: 2363.672
2024-02-20 21:52:44,714 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:47,077 Finished generation: 498 Max generations: 1000
2024-02-20 21:52:47,078 best_value: 8341.0 median: 0.0 mean: 2379.884
2024-02-20 21:52:47,078 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:49,647 Finished generation: 499 Max generations: 1000
2024-02-20 21:52:49,648 best_value: 8341.0 median: 1133.0 mean: 2527.808
2024-02-20 21:52:49,648 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:52,171 Finished generation: 500 Max generations: 1000
2024-02-20 21:52:52,171 best_value: 8341.0 median: 0.0 mean: 2518.136
2024-02-20 21:52:52,172 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:54,738 Finished generation: 501 Max generations: 1000
2024-02-20 21:52:54,738 best_value: 8341.0 median: 2273.0 mean: 2496.416
2024-02-20 21:52:54,739 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:57,239 Finished generation: 502 Max generations: 1000
2024-02-20 21:52:57,240 best_value: 8341.0 median: 0.0 mean: 2453.336
2024-02-20 21:52:57,240 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:52:59,553 Finished generation: 503 Max generations: 1000
2024-02-20 21:52:59,554 best_value: 8341.0 median: 0.0 mean: 2416.312
2024-02-20 21:52:59,554 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:01,921 Finished generation: 504 Max generations: 1000
2024-02-20 21:53:01,922 best_value: 8341.0 median: 0.0 mean: 2478.18
2024-02-20 21:53:01,922 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:04,403 Finished generation: 505 Max generations: 1000
2024-02-20 21:53:04,403 best_value: 8341.0 median: 2676.0 mean: 2546.336
2024-02-20 21:53:04,404 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:06,803 Finished generation: 506 Max generations: 1000
2024-02-20 21:53:06,803 best_value: 8341.0 median: 2442.0 mean: 2524.904
2024-02-20 21:53:06,804 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:09,169 Finished generation: 507 Max generations: 1000
2024-02-20 21:53:09,169 best_value: 8341.0 median: 0.0 mean: 2467.156
2024-02-20 21:53:09,169 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:11,503 Finished generation: 508 Max generations: 1000
2024-02-20 21:53:11,503 best_value: 8341.0 median: 0.0 mean: 2472.356
2024-02-20 21:53:11,504 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:13,893 Finished generation: 509 Max generations: 1000
2024-02-20 21:53:13,894 best_value: 8341.0 median: 0.0 mean: 2471.952
2024-02-20 21:53:13,894 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:16,290 Finished generation: 510 Max generations: 1000
2024-02-20 21:53:16,291 best_value: 8341.0 median: 0.0 mean: 2470.308
2024-02-20 21:53:16,291 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:18,632 Finished generation: 511 Max generations: 1000
2024-02-20 21:53:18,632 best_value: 8341.0 median: 0.0 mean: 2475.528
2024-02-20 21:53:18,633 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:21,016 Finished generation: 512 Max generations: 1000
2024-02-20 21:53:21,017 best_value: 8341.0 median: 0.0 mean: 2525.176
2024-02-20 21:53:21,017 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:23,290 Finished generation: 513 Max generations: 1000
2024-02-20 21:53:23,290 best_value: 8341.0 median: 0.0 mean: 2454.204
2024-02-20 21:53:23,291 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:25,583 Finished generation: 514 Max generations: 1000
2024-02-20 21:53:25,583 best_value: 8341.0 median: 0.0 mean: 2511.448
2024-02-20 21:53:25,584 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:27,833 Finished generation: 515 Max generations: 1000
2024-02-20 21:53:27,834 best_value: 8341.0 median: 0.0 mean: 2468.12
2024-02-20 21:53:27,834 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:30,187 Finished generation: 516 Max generations: 1000
2024-02-20 21:53:30,188 best_value: 8341.0 median: 0.0 mean: 2506.64
2024-02-20 21:53:30,188 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:32,622 Finished generation: 517 Max generations: 1000
2024-02-20 21:53:32,622 best_value: 8341.0 median: 0.0 mean: 2572.912
2024-02-20 21:53:32,623 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:35,047 Finished generation: 518 Max generations: 1000
2024-02-20 21:53:35,048 best_value: 8341.0 median: 2676.0 mean: 2628.476
2024-02-20 21:53:35,048 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:37,605 Finished generation: 519 Max generations: 1000
2024-02-20 21:53:37,606 best_value: 8341.0 median: 2676.0 mean: 2726.844
2024-02-20 21:53:37,606 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:40,005 Finished generation: 520 Max generations: 1000
2024-02-20 21:53:40,005 best_value: 8341.0 median: 876.0 mean: 2613.04
2024-02-20 21:53:40,006 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:42,359 Finished generation: 521 Max generations: 1000
2024-02-20 21:53:42,360 best_value: 8341.0 median: 210.0 mean: 2665.428
2024-02-20 21:53:42,360 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:44,708 Finished generation: 522 Max generations: 1000
2024-02-20 21:53:44,709 best_value: 8341.0 median: 0.0 mean: 2673.004
2024-02-20 21:53:44,709 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:46,936 Finished generation: 523 Max generations: 1000
2024-02-20 21:53:46,937 best_value: 8341.0 median: 0.0 mean: 2558.38
2024-02-20 21:53:46,937 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:49,171 Finished generation: 524 Max generations: 1000
2024-02-20 21:53:49,171 best_value: 8341.0 median: 0.0 mean: 2548.852
2024-02-20 21:53:49,172 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:51,612 Finished generation: 525 Max generations: 1000
2024-02-20 21:53:51,612 best_value: 8341.0 median: 2638.0 mean: 2736.86
2024-02-20 21:53:51,613 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:54,087 Finished generation: 526 Max generations: 1000
2024-02-20 21:53:54,088 best_value: 8341.0 median: 2676.0 mean: 2834.08
2024-02-20 21:53:54,088 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:56,435 Finished generation: 527 Max generations: 1000
2024-02-20 21:53:56,436 best_value: 8341.0 median: 147.0 mean: 2719.504
2024-02-20 21:53:56,436 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:53:58,688 Finished generation: 528 Max generations: 1000
2024-02-20 21:53:58,688 best_value: 8341.0 median: 0.0 mean: 2596.26
2024-02-20 21:53:58,689 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:01,052 Finished generation: 529 Max generations: 1000
2024-02-20 21:54:01,053 best_value: 8341.0 median: 0.0 mean: 2674.02
2024-02-20 21:54:01,053 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:03,448 Finished generation: 530 Max generations: 1000
2024-02-20 21:54:03,449 best_value: 8341.0 median: 555.0 mean: 2754.496
2024-02-20 21:54:03,449 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:05,877 Finished generation: 531 Max generations: 1000
2024-02-20 21:54:05,878 best_value: 8341.0 median: 635.0 mean: 2732.916
2024-02-20 21:54:05,878 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:08,328 Finished generation: 532 Max generations: 1000
2024-02-20 21:54:08,329 best_value: 8341.0 median: 555.0 mean: 2738.896
2024-02-20 21:54:08,329 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:10,651 Finished generation: 533 Max generations: 1000
2024-02-20 21:54:10,651 best_value: 8341.0 median: 0.0 mean: 2697.884
2024-02-20 21:54:10,651 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:12,843 Finished generation: 534 Max generations: 1000
2024-02-20 21:54:12,843 best_value: 8341.0 median: 0.0 mean: 2522.24
2024-02-20 21:54:12,844 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:15,103 Finished generation: 535 Max generations: 1000
2024-02-20 21:54:15,103 best_value: 8341.0 median: 0.0 mean: 2554.828
2024-02-20 21:54:15,104 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:17,361 Finished generation: 536 Max generations: 1000
2024-02-20 21:54:17,362 best_value: 8341.0 median: 0.0 mean: 2583.168
2024-02-20 21:54:17,362 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:19,549 Finished generation: 537 Max generations: 1000
2024-02-20 21:54:19,549 best_value: 8341.0 median: 0.0 mean: 2560.756
2024-02-20 21:54:19,550 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:21,885 Finished generation: 538 Max generations: 1000
2024-02-20 21:54:21,885 best_value: 8341.0 median: 0.0 mean: 2617.228
2024-02-20 21:54:21,886 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:24,226 Finished generation: 539 Max generations: 1000
2024-02-20 21:54:24,227 best_value: 8341.0 median: 0.0 mean: 2656.4
2024-02-20 21:54:24,227 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:26,541 Finished generation: 540 Max generations: 1000
2024-02-20 21:54:26,542 best_value: 8341.0 median: 0.0 mean: 2679.928
2024-02-20 21:54:26,542 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:28,882 Finished generation: 541 Max generations: 1000
2024-02-20 21:54:28,882 best_value: 8341.0 median: 0.0 mean: 2612.512
2024-02-20 21:54:28,882 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:31,010 Finished generation: 542 Max generations: 1000
2024-02-20 21:54:31,010 best_value: 8341.0 median: 0.0 mean: 2421.284
2024-02-20 21:54:31,010 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:33,235 Finished generation: 543 Max generations: 1000
2024-02-20 21:54:33,236 best_value: 8341.0 median: 0.0 mean: 2541.696
2024-02-20 21:54:33,236 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:35,540 Finished generation: 544 Max generations: 1000
2024-02-20 21:54:35,540 best_value: 8341.0 median: 0.0 mean: 2590.98
2024-02-20 21:54:35,540 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:38,088 Finished generation: 545 Max generations: 1000
2024-02-20 21:54:38,089 best_value: 8341.0 median: 2676.0 mean: 2803.324
2024-02-20 21:54:38,089 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:40,684 Finished generation: 546 Max generations: 1000
2024-02-20 21:54:40,684 best_value: 8341.0 median: 2679.0 mean: 2827.132
2024-02-20 21:54:40,685 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:43,193 Finished generation: 547 Max generations: 1000
2024-02-20 21:54:43,194 best_value: 8341.0 median: 2676.0 mean: 2794.284
2024-02-20 21:54:43,194 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:45,678 Finished generation: 548 Max generations: 1000
2024-02-20 21:54:45,679 best_value: 8341.0 median: 2676.0 mean: 2810.912
2024-02-20 21:54:45,679 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:48,156 Finished generation: 549 Max generations: 1000
2024-02-20 21:54:48,157 best_value: 8341.0 median: 2676.0 mean: 2745.72
2024-02-20 21:54:48,157 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:50,495 Finished generation: 550 Max generations: 1000
2024-02-20 21:54:50,496 best_value: 8341.0 median: 0.0 mean: 2685.308
2024-02-20 21:54:50,496 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:52,875 Finished generation: 551 Max generations: 1000
2024-02-20 21:54:52,876 best_value: 8341.0 median: 0.0 mean: 2691.408
2024-02-20 21:54:52,876 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:55,083 Finished generation: 552 Max generations: 1000
2024-02-20 21:54:55,083 best_value: 8341.0 median: 0.0 mean: 2592.772
2024-02-20 21:54:55,084 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:57,195 Finished generation: 553 Max generations: 1000
2024-02-20 21:54:57,195 best_value: 8341.0 median: 0.0 mean: 2503.46
2024-02-20 21:54:57,195 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:54:59,406 Finished generation: 554 Max generations: 1000
2024-02-20 21:54:59,407 best_value: 8341.0 median: 0.0 mean: 2598.576
2024-02-20 21:54:59,407 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:01,625 Finished generation: 555 Max generations: 1000
2024-02-20 21:55:01,625 best_value: 8341.0 median: 0.0 mean: 2580.572
2024-02-20 21:55:01,625 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:03,789 Finished generation: 556 Max generations: 1000
2024-02-20 21:55:03,790 best_value: 8341.0 median: 0.0 mean: 2526.62
2024-02-20 21:55:03,790 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:05,975 Finished generation: 557 Max generations: 1000
2024-02-20 21:55:05,975 best_value: 8341.0 median: 0.0 mean: 2488.912
2024-02-20 21:55:05,976 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:08,408 Finished generation: 558 Max generations: 1000
2024-02-20 21:55:08,408 best_value: 8341.0 median: 0.0 mean: 2656.336
2024-02-20 21:55:08,409 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:11,023 Finished generation: 559 Max generations: 1000
2024-02-20 21:55:11,024 best_value: 8341.0 median: 2677.0 mean: 2726.396
2024-02-20 21:55:11,024 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:13,559 Finished generation: 560 Max generations: 1000
2024-02-20 21:55:13,560 best_value: 8341.0 median: 2991.0 mean: 2818.852
2024-02-20 21:55:13,560 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:16,138 Finished generation: 561 Max generations: 1000
2024-02-20 21:55:16,138 best_value: 8341.0 median: 2991.0 mean: 2806.296
2024-02-20 21:55:16,139 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:18,651 Finished generation: 562 Max generations: 1000
2024-02-20 21:55:18,652 best_value: 8341.0 median: 2677.0 mean: 2786.892
2024-02-20 21:55:18,652 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:21,023 Finished generation: 563 Max generations: 1000
2024-02-20 21:55:21,023 best_value: 8341.0 median: 0.0 mean: 2620.6
2024-02-20 21:55:21,024 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:23,506 Finished generation: 564 Max generations: 1000
2024-02-20 21:55:23,506 best_value: 8341.0 median: 2676.0 mean: 2761.792
2024-02-20 21:55:23,506 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:25,990 Finished generation: 565 Max generations: 1000
2024-02-20 21:55:25,990 best_value: 8341.0 median: 2676.0 mean: 2723.244
2024-02-20 21:55:25,990 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:28,500 Finished generation: 566 Max generations: 1000
2024-02-20 21:55:28,500 best_value: 8341.0 median: 2676.0 mean: 2729.56
2024-02-20 21:55:28,501 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:30,879 Finished generation: 567 Max generations: 1000
2024-02-20 21:55:30,880 best_value: 8341.0 median: 0.0 mean: 2619.756
2024-02-20 21:55:30,880 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:33,372 Finished generation: 568 Max generations: 1000
2024-02-20 21:55:33,372 best_value: 8341.0 median: 2676.0 mean: 2751.704
2024-02-20 21:55:33,373 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:35,776 Finished generation: 569 Max generations: 1000
2024-02-20 21:55:35,776 best_value: 8341.0 median: 2512.0 mean: 2639.512
2024-02-20 21:55:35,777 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:38,314 Finished generation: 570 Max generations: 1000
2024-02-20 21:55:38,314 best_value: 8341.0 median: 2721.0 mean: 2796.232
2024-02-20 21:55:38,314 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:40,946 Finished generation: 571 Max generations: 1000
2024-02-20 21:55:40,947 best_value: 8341.0 median: 2991.0 mean: 2888.772
2024-02-20 21:55:40,947 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:43,573 Finished generation: 572 Max generations: 1000
2024-02-20 21:55:43,573 best_value: 8341.0 median: 2991.0 mean: 2947.452
2024-02-20 21:55:43,574 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:46,161 Finished generation: 573 Max generations: 1000
2024-02-20 21:55:46,162 best_value: 8341.0 median: 2991.0 mean: 2911.504
2024-02-20 21:55:46,162 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:48,811 Finished generation: 574 Max generations: 1000
2024-02-20 21:55:48,812 best_value: 8341.0 median: 2991.0 mean: 2971.892
2024-02-20 21:55:48,812 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:51,368 Finished generation: 575 Max generations: 1000
2024-02-20 21:55:51,368 best_value: 8341.0 median: 2991.0 mean: 2910.956
2024-02-20 21:55:51,369 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:53,841 Finished generation: 576 Max generations: 1000
2024-02-20 21:55:53,842 best_value: 8341.0 median: 2991.0 mean: 2820.56
2024-02-20 21:55:53,842 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:56,293 Finished generation: 577 Max generations: 1000
2024-02-20 21:55:56,293 best_value: 8341.0 median: 2991.0 mean: 2760.44
2024-02-20 21:55:56,294 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:55:58,855 Finished generation: 578 Max generations: 1000
2024-02-20 21:55:58,855 best_value: 8341.0 median: 2991.0 mean: 2768.776
2024-02-20 21:55:58,856 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:01,338 Finished generation: 579 Max generations: 1000
2024-02-20 21:56:01,338 best_value: 8341.0 median: 2991.0 mean: 2766.604
2024-02-20 21:56:01,339 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:03,899 Finished generation: 580 Max generations: 1000
2024-02-20 21:56:03,900 best_value: 8341.0 median: 2676.0 mean: 2734.98
2024-02-20 21:56:03,900 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:06,363 Finished generation: 581 Max generations: 1000
2024-02-20 21:56:06,364 best_value: 8341.0 median: 1199.0 mean: 2641.764
2024-02-20 21:56:06,364 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:09,186 Finished generation: 582 Max generations: 1000
2024-02-20 21:56:09,187 best_value: 8341.0 median: 2676.0 mean: 2718.636
2024-02-20 21:56:09,187 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:11,887 Finished generation: 583 Max generations: 1000
2024-02-20 21:56:11,888 best_value: 8341.0 median: 2676.0 mean: 2748.888
2024-02-20 21:56:11,888 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:14,704 Finished generation: 584 Max generations: 1000
2024-02-20 21:56:14,704 best_value: 8341.0 median: 2676.0 mean: 2808.904
2024-02-20 21:56:14,705 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:17,333 Finished generation: 585 Max generations: 1000
2024-02-20 21:56:17,333 best_value: 8341.0 median: 2991.0 mean: 2865.692
2024-02-20 21:56:17,333 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:19,933 Finished generation: 586 Max generations: 1000
2024-02-20 21:56:19,934 best_value: 8341.0 median: 2991.0 mean: 2887.732
2024-02-20 21:56:19,934 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:22,625 Finished generation: 587 Max generations: 1000
2024-02-20 21:56:22,625 best_value: 8341.0 median: 2991.0 mean: 2901.528
2024-02-20 21:56:22,625 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:25,244 Finished generation: 588 Max generations: 1000
2024-02-20 21:56:25,244 best_value: 8341.0 median: 2991.0 mean: 2939.584
2024-02-20 21:56:25,245 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:27,723 Finished generation: 589 Max generations: 1000
2024-02-20 21:56:27,723 best_value: 8341.0 median: 2670.0 mean: 2716.188
2024-02-20 21:56:27,723 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:30,235 Finished generation: 590 Max generations: 1000
2024-02-20 21:56:30,236 best_value: 8341.0 median: 2676.0 mean: 2731.16
2024-02-20 21:56:30,237 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:32,863 Finished generation: 591 Max generations: 1000
2024-02-20 21:56:32,864 best_value: 8341.0 median: 2991.0 mean: 2904.104
2024-02-20 21:56:32,865 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:35,362 Finished generation: 592 Max generations: 1000
2024-02-20 21:56:35,363 best_value: 8341.0 median: 0.0 mean: 2631.72
2024-02-20 21:56:35,363 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:38,006 Finished generation: 593 Max generations: 1000
2024-02-20 21:56:38,007 best_value: 8341.0 median: 2676.0 mean: 2681.992
2024-02-20 21:56:38,007 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:40,644 Finished generation: 594 Max generations: 1000
2024-02-20 21:56:40,644 best_value: 8341.0 median: 2676.0 mean: 2646.436
2024-02-20 21:56:40,645 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:43,268 Finished generation: 595 Max generations: 1000
2024-02-20 21:56:43,269 best_value: 8341.0 median: 2676.0 mean: 2701.028
2024-02-20 21:56:43,270 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:45,920 Finished generation: 596 Max generations: 1000
2024-02-20 21:56:45,920 best_value: 8341.0 median: 2676.0 mean: 2696.892
2024-02-20 21:56:45,921 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:48,574 Finished generation: 597 Max generations: 1000
2024-02-20 21:56:48,574 best_value: 8341.0 median: 2676.0 mean: 2642.988
2024-02-20 21:56:48,575 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:51,229 Finished generation: 598 Max generations: 1000
2024-02-20 21:56:51,229 best_value: 8341.0 median: 0.0 mean: 2592.328
2024-02-20 21:56:51,229 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:53,883 Finished generation: 599 Max generations: 1000
2024-02-20 21:56:53,884 best_value: 8341.0 median: 2676.0 mean: 2698.48
2024-02-20 21:56:53,884 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:56,504 Finished generation: 600 Max generations: 1000
2024-02-20 21:56:56,504 best_value: 8341.0 median: 2676.0 mean: 2686.548
2024-02-20 21:56:56,505 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:56:59,078 Finished generation: 601 Max generations: 1000
2024-02-20 21:56:59,078 best_value: 8341.0 median: 0.0 mean: 2631.6
2024-02-20 21:56:59,078 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:01,739 Finished generation: 602 Max generations: 1000
2024-02-20 21:57:01,739 best_value: 8341.0 median: 2646.0 mean: 2709.72
2024-02-20 21:57:01,740 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:04,336 Finished generation: 603 Max generations: 1000
2024-02-20 21:57:04,337 best_value: 8341.0 median: 2676.0 mean: 2736.368
2024-02-20 21:57:04,337 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:06,959 Finished generation: 604 Max generations: 1000
2024-02-20 21:57:06,960 best_value: 8341.0 median: 2676.0 mean: 2723.216
2024-02-20 21:57:06,960 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:09,618 Finished generation: 605 Max generations: 1000
2024-02-20 21:57:09,619 best_value: 8341.0 median: 2676.0 mean: 2754.36
2024-02-20 21:57:09,619 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:12,207 Finished generation: 606 Max generations: 1000
2024-02-20 21:57:12,209 best_value: 8341.0 median: 2671.0 mean: 2683.04
2024-02-20 21:57:12,209 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:14,657 Finished generation: 607 Max generations: 1000
2024-02-20 21:57:14,658 best_value: 8341.0 median: 0.0 mean: 2625.508
2024-02-20 21:57:14,658 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:17,270 Finished generation: 608 Max generations: 1000
2024-02-20 21:57:17,271 best_value: 8341.0 median: 2676.0 mean: 2771.036
2024-02-20 21:57:17,271 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:20,016 Finished generation: 609 Max generations: 1000
2024-02-20 21:57:20,017 best_value: 8341.0 median: 2676.0 mean: 2801.772
2024-02-20 21:57:20,017 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:22,676 Finished generation: 610 Max generations: 1000
2024-02-20 21:57:22,676 best_value: 8341.0 median: 2637.0 mean: 2744.268
2024-02-20 21:57:22,677 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:25,325 Finished generation: 611 Max generations: 1000
2024-02-20 21:57:25,325 best_value: 8341.0 median: 2277.0 mean: 2693.548
2024-02-20 21:57:25,326 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:27,971 Finished generation: 612 Max generations: 1000
2024-02-20 21:57:27,971 best_value: 8341.0 median: 0.0 mean: 2614.352
2024-02-20 21:57:27,971 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:30,512 Finished generation: 613 Max generations: 1000
2024-02-20 21:57:30,512 best_value: 8341.0 median: 0.0 mean: 2525.196
2024-02-20 21:57:30,513 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:33,044 Finished generation: 614 Max generations: 1000
2024-02-20 21:57:33,044 best_value: 8341.0 median: 0.0 mean: 2517.22
2024-02-20 21:57:33,045 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:35,626 Finished generation: 615 Max generations: 1000
2024-02-20 21:57:35,627 best_value: 8341.0 median: 10.0 mean: 2611.48
2024-02-20 21:57:35,627 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:38,163 Finished generation: 616 Max generations: 1000
2024-02-20 21:57:38,163 best_value: 8341.0 median: 0.0 mean: 2510.304
2024-02-20 21:57:38,164 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:40,735 Finished generation: 617 Max generations: 1000
2024-02-20 21:57:40,735 best_value: 8341.0 median: 0.0 mean: 2452.788
2024-02-20 21:57:40,735 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:43,228 Finished generation: 618 Max generations: 1000
2024-02-20 21:57:43,228 best_value: 8341.0 median: 0.0 mean: 2500.34
2024-02-20 21:57:43,229 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:45,646 Finished generation: 619 Max generations: 1000
2024-02-20 21:57:45,647 best_value: 8341.0 median: 0.0 mean: 2490.496
2024-02-20 21:57:45,647 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:47,959 Finished generation: 620 Max generations: 1000
2024-02-20 21:57:47,959 best_value: 8341.0 median: 0.0 mean: 2381.696
2024-02-20 21:57:47,960 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:50,266 Finished generation: 621 Max generations: 1000
2024-02-20 21:57:50,266 best_value: 8341.0 median: 0.0 mean: 2447.504
2024-02-20 21:57:50,267 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:52,665 Finished generation: 622 Max generations: 1000
2024-02-20 21:57:52,666 best_value: 8341.0 median: 0.0 mean: 2533.912
2024-02-20 21:57:52,666 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:55,002 Finished generation: 623 Max generations: 1000
2024-02-20 21:57:55,003 best_value: 8341.0 median: 0.0 mean: 2461.2
2024-02-20 21:57:55,003 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:57,342 Finished generation: 624 Max generations: 1000
2024-02-20 21:57:57,343 best_value: 8341.0 median: 0.0 mean: 2461.448
2024-02-20 21:57:57,343 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:57:59,669 Finished generation: 625 Max generations: 1000
2024-02-20 21:57:59,670 best_value: 8341.0 median: 0.0 mean: 2435.452
2024-02-20 21:57:59,670 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:02,041 Finished generation: 626 Max generations: 1000
2024-02-20 21:58:02,041 best_value: 8341.0 median: 0.0 mean: 2488.192
2024-02-20 21:58:02,041 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:04,411 Finished generation: 627 Max generations: 1000
2024-02-20 21:58:04,412 best_value: 8341.0 median: 0.0 mean: 2563.236
2024-02-20 21:58:04,412 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:06,720 Finished generation: 628 Max generations: 1000
2024-02-20 21:58:06,720 best_value: 8341.0 median: 0.0 mean: 2516.228
2024-02-20 21:58:06,721 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:09,048 Finished generation: 629 Max generations: 1000
2024-02-20 21:58:09,049 best_value: 8341.0 median: 0.0 mean: 2468.104
2024-02-20 21:58:09,049 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:11,405 Finished generation: 630 Max generations: 1000
2024-02-20 21:58:11,406 best_value: 8341.0 median: 0.0 mean: 2541.12
2024-02-20 21:58:11,406 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:13,743 Finished generation: 631 Max generations: 1000
2024-02-20 21:58:13,744 best_value: 8341.0 median: 0.0 mean: 2592.66
2024-02-20 21:58:13,744 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:16,057 Finished generation: 632 Max generations: 1000
2024-02-20 21:58:16,057 best_value: 8341.0 median: 0.0 mean: 2570.332
2024-02-20 21:58:16,058 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:18,400 Finished generation: 633 Max generations: 1000
2024-02-20 21:58:18,401 best_value: 8341.0 median: 0.0 mean: 2605.968
2024-02-20 21:58:18,401 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:20,761 Finished generation: 634 Max generations: 1000
2024-02-20 21:58:20,761 best_value: 8341.0 median: 2583.0 mean: 2681.416
2024-02-20 21:58:20,762 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:23,100 Finished generation: 635 Max generations: 1000
2024-02-20 21:58:23,101 best_value: 8341.0 median: 0.0 mean: 2613.296
2024-02-20 21:58:23,101 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:25,544 Finished generation: 636 Max generations: 1000
2024-02-20 21:58:25,544 best_value: 8341.0 median: 2669.0 mean: 2705.704
2024-02-20 21:58:25,544 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:27,962 Finished generation: 637 Max generations: 1000
2024-02-20 21:58:27,963 best_value: 8341.0 median: 0.0 mean: 2657.072
2024-02-20 21:58:27,963 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:30,386 Finished generation: 638 Max generations: 1000
2024-02-20 21:58:30,386 best_value: 8341.0 median: 2092.0 mean: 2714.764
2024-02-20 21:58:30,387 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:32,827 Finished generation: 639 Max generations: 1000
2024-02-20 21:58:32,828 best_value: 8341.0 median: 0.0 mean: 2684.732
2024-02-20 21:58:32,828 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:35,327 Finished generation: 640 Max generations: 1000
2024-02-20 21:58:35,328 best_value: 8341.0 median: 2676.0 mean: 2758.576
2024-02-20 21:58:35,328 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:37,814 Finished generation: 641 Max generations: 1000
2024-02-20 21:58:37,815 best_value: 8341.0 median: 2676.0 mean: 2703.184
2024-02-20 21:58:37,815 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:40,210 Finished generation: 642 Max generations: 1000
2024-02-20 21:58:40,211 best_value: 8341.0 median: 0.0 mean: 2627.476
2024-02-20 21:58:40,211 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:42,703 Finished generation: 643 Max generations: 1000
2024-02-20 21:58:42,703 best_value: 8341.0 median: 2676.0 mean: 2760.468
2024-02-20 21:58:42,704 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:45,141 Finished generation: 644 Max generations: 1000
2024-02-20 21:58:45,142 best_value: 8341.0 median: 2676.0 mean: 2751.192
2024-02-20 21:58:45,142 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:47,325 Finished generation: 645 Max generations: 1000
2024-02-20 21:58:47,325 best_value: 8341.0 median: 0.0 mean: 2479.828
2024-02-20 21:58:47,326 import numpy as np
import math
rules = np.array([[4.6, math.sin(7.3 ), (2.4)], [math.sin(pow(math.log(abs(3.9)), 4.4) ), (8.9), 1.6+0.9], [2.6, (math.log(abs(pow(pow(pow(1.3, 3.9), 6.1), 1.3)))), math.sin(-math.log(abs(math.sin((+6.3) )))/math.log(abs(1.7/math.sin(pow(pow(pow((math.sin(((math.sin(+9.2 ))) )), 7.8), 8.8), 6.9) )))/0.6 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:49,632 Finished generation: 646 Max generations: 1000
2024-02-20 21:58:49,633 best_value: 8406.0 median: 0.0 mean: 2589.76
2024-02-20 21:58:49,633 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:51,964 Finished generation: 647 Max generations: 1000
2024-02-20 21:58:51,964 best_value: 8406.0 median: 0.0 mean: 2602.48
2024-02-20 21:58:51,964 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:54,240 Finished generation: 648 Max generations: 1000
2024-02-20 21:58:54,241 best_value: 8406.0 median: 0.0 mean: 2542.168
2024-02-20 21:58:54,241 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:56,585 Finished generation: 649 Max generations: 1000
2024-02-20 21:58:56,586 best_value: 8406.0 median: 0.0 mean: 2664.796
2024-02-20 21:58:56,586 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:58:58,973 Finished generation: 650 Max generations: 1000
2024-02-20 21:58:58,974 best_value: 8406.0 median: 0.0 mean: 2714.492
2024-02-20 21:58:58,974 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:01,313 Finished generation: 651 Max generations: 1000
2024-02-20 21:59:01,314 best_value: 8406.0 median: 0.0 mean: 2764.972
2024-02-20 21:59:01,314 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:03,569 Finished generation: 652 Max generations: 1000
2024-02-20 21:59:03,570 best_value: 8406.0 median: 0.0 mean: 2694.472
2024-02-20 21:59:03,570 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:05,947 Finished generation: 653 Max generations: 1000
2024-02-20 21:59:05,947 best_value: 8406.0 median: 2676.0 mean: 2822.744
2024-02-20 21:59:05,947 import numpy as np
import math
rules = np.array([[2.3, math.sin(-pow(0.3, 0.9) ), (6.4)], [math.log(abs(math.log(abs(1.5)))), 8.3, 5.4], [6.8, 1.4, math.sin(9.0 )+(3.0)]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:08,453 Finished generation: 654 Max generations: 1000
2024-02-20 21:59:08,453 best_value: 8969.0 median: 0.0 mean: 2735.524
2024-02-20 21:59:08,454 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:10,938 Finished generation: 655 Max generations: 1000
2024-02-20 21:59:10,939 best_value: 8969.0 median: 0.0 mean: 2685.668
2024-02-20 21:59:10,939 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:13,180 Finished generation: 656 Max generations: 1000
2024-02-20 21:59:13,180 best_value: 8969.0 median: 0.0 mean: 2559.712
2024-02-20 21:59:13,181 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:15,577 Finished generation: 657 Max generations: 1000
2024-02-20 21:59:15,578 best_value: 8969.0 median: 0.0 mean: 2652.416
2024-02-20 21:59:15,578 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:17,964 Finished generation: 658 Max generations: 1000
2024-02-20 21:59:17,965 best_value: 8969.0 median: 0.0 mean: 2677.976
2024-02-20 21:59:17,965 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:20,334 Finished generation: 659 Max generations: 1000
2024-02-20 21:59:20,335 best_value: 8969.0 median: 0.0 mean: 2591.02
2024-02-20 21:59:20,335 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:22,771 Finished generation: 660 Max generations: 1000
2024-02-20 21:59:22,771 best_value: 8969.0 median: 0.0 mean: 2629.884
2024-02-20 21:59:22,771 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:25,255 Finished generation: 661 Max generations: 1000
2024-02-20 21:59:25,256 best_value: 8969.0 median: 2676.0 mean: 2725.224
2024-02-20 21:59:25,256 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:27,761 Finished generation: 662 Max generations: 1000
2024-02-20 21:59:27,762 best_value: 8969.0 median: 0.0 mean: 2643.3
2024-02-20 21:59:27,762 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:30,369 Finished generation: 663 Max generations: 1000
2024-02-20 21:59:30,369 best_value: 8969.0 median: 0.0 mean: 2631.852
2024-02-20 21:59:30,369 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:33,128 Finished generation: 664 Max generations: 1000
2024-02-20 21:59:33,129 best_value: 8969.0 median: 2676.0 mean: 2777.592
2024-02-20 21:59:33,129 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:35,812 Finished generation: 665 Max generations: 1000
2024-02-20 21:59:35,813 best_value: 8969.0 median: 2676.0 mean: 2835.56
2024-02-20 21:59:35,813 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:38,649 Finished generation: 666 Max generations: 1000
2024-02-20 21:59:38,650 best_value: 8969.0 median: 2991.0 mean: 2976.832
2024-02-20 21:59:38,650 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:41,351 Finished generation: 667 Max generations: 1000
2024-02-20 21:59:41,351 best_value: 8969.0 median: 2676.0 mean: 2825.984
2024-02-20 21:59:41,351 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:43,970 Finished generation: 668 Max generations: 1000
2024-02-20 21:59:43,970 best_value: 8969.0 median: 0.0 mean: 2795.256
2024-02-20 21:59:43,970 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:46,469 Finished generation: 669 Max generations: 1000
2024-02-20 21:59:46,470 best_value: 8969.0 median: 0.0 mean: 2754.472
2024-02-20 21:59:46,470 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:49,046 Finished generation: 670 Max generations: 1000
2024-02-20 21:59:49,047 best_value: 8969.0 median: 0.0 mean: 2734.88
2024-02-20 21:59:49,048 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:51,604 Finished generation: 671 Max generations: 1000
2024-02-20 21:59:51,606 best_value: 8969.0 median: 0.0 mean: 2667.756
2024-02-20 21:59:51,606 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:54,061 Finished generation: 672 Max generations: 1000
2024-02-20 21:59:54,062 best_value: 8969.0 median: 0.0 mean: 2619.2
2024-02-20 21:59:54,062 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:56,456 Finished generation: 673 Max generations: 1000
2024-02-20 21:59:56,457 best_value: 8969.0 median: 0.0 mean: 2564.276
2024-02-20 21:59:56,458 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 21:59:58,862 Finished generation: 674 Max generations: 1000
2024-02-20 21:59:58,862 best_value: 8969.0 median: 0.0 mean: 2532.272
2024-02-20 21:59:58,863 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:01,320 Finished generation: 675 Max generations: 1000
2024-02-20 22:00:01,320 best_value: 8969.0 median: 0.0 mean: 2541.792
2024-02-20 22:00:01,321 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:03,923 Finished generation: 676 Max generations: 1000
2024-02-20 22:00:03,924 best_value: 8969.0 median: 2373.0 mean: 2750.16
2024-02-20 22:00:03,924 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:06,539 Finished generation: 677 Max generations: 1000
2024-02-20 22:00:06,540 best_value: 8969.0 median: 2676.0 mean: 2789.04
2024-02-20 22:00:06,541 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:09,208 Finished generation: 678 Max generations: 1000
2024-02-20 22:00:09,209 best_value: 8969.0 median: 2676.0 mean: 2736.516
2024-02-20 22:00:09,209 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:11,741 Finished generation: 679 Max generations: 1000
2024-02-20 22:00:11,742 best_value: 8969.0 median: 0.0 mean: 2693.088
2024-02-20 22:00:11,742 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:14,401 Finished generation: 680 Max generations: 1000
2024-02-20 22:00:14,401 best_value: 8969.0 median: 2676.0 mean: 2855.92
2024-02-20 22:00:14,402 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:16,970 Finished generation: 681 Max generations: 1000
2024-02-20 22:00:16,971 best_value: 8969.0 median: 2068.0 mean: 2756.812
2024-02-20 22:00:16,971 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:19,646 Finished generation: 682 Max generations: 1000
2024-02-20 22:00:19,648 best_value: 8969.0 median: 2676.0 mean: 2829.24
2024-02-20 22:00:19,648 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:22,219 Finished generation: 683 Max generations: 1000
2024-02-20 22:00:22,220 best_value: 8969.0 median: 0.0 mean: 2673.64
2024-02-20 22:00:22,220 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:24,689 Finished generation: 684 Max generations: 1000
2024-02-20 22:00:24,690 best_value: 8969.0 median: 0.0 mean: 2651.272
2024-02-20 22:00:24,691 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:27,297 Finished generation: 685 Max generations: 1000
2024-02-20 22:00:27,298 best_value: 8969.0 median: 2676.0 mean: 2748.188
2024-02-20 22:00:27,298 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:30,082 Finished generation: 686 Max generations: 1000
2024-02-20 22:00:30,083 best_value: 8969.0 median: 2991.0 mean: 2937.736
2024-02-20 22:00:30,083 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:32,848 Finished generation: 687 Max generations: 1000
2024-02-20 22:00:32,848 best_value: 8969.0 median: 2991.0 mean: 2981.128
2024-02-20 22:00:32,849 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:35,498 Finished generation: 688 Max generations: 1000
2024-02-20 22:00:35,499 best_value: 8969.0 median: 2676.0 mean: 2918.744
2024-02-20 22:00:35,499 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:38,043 Finished generation: 689 Max generations: 1000
2024-02-20 22:00:38,043 best_value: 8969.0 median: 0.0 mean: 2792.824
2024-02-20 22:00:38,044 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:40,604 Finished generation: 690 Max generations: 1000
2024-02-20 22:00:40,604 best_value: 8969.0 median: 0.0 mean: 2868.672
2024-02-20 22:00:40,605 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:43,178 Finished generation: 691 Max generations: 1000
2024-02-20 22:00:43,179 best_value: 8969.0 median: 2676.0 mean: 2908.312
2024-02-20 22:00:43,179 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:45,704 Finished generation: 692 Max generations: 1000
2024-02-20 22:00:45,705 best_value: 8969.0 median: 0.0 mean: 2782.64
2024-02-20 22:00:45,705 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:48,230 Finished generation: 693 Max generations: 1000
2024-02-20 22:00:48,230 best_value: 8969.0 median: 0.0 mean: 2753.428
2024-02-20 22:00:48,231 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:50,549 Finished generation: 694 Max generations: 1000
2024-02-20 22:00:50,550 best_value: 8969.0 median: 0.0 mean: 2593.492
2024-02-20 22:00:50,550 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:52,787 Finished generation: 695 Max generations: 1000
2024-02-20 22:00:52,788 best_value: 8969.0 median: 0.0 mean: 2522.824
2024-02-20 22:00:52,788 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:55,042 Finished generation: 696 Max generations: 1000
2024-02-20 22:00:55,043 best_value: 8969.0 median: 0.0 mean: 2548.24
2024-02-20 22:00:55,043 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:57,300 Finished generation: 697 Max generations: 1000
2024-02-20 22:00:57,301 best_value: 8969.0 median: 0.0 mean: 2561.048
2024-02-20 22:00:57,301 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:00:59,838 Finished generation: 698 Max generations: 1000
2024-02-20 22:00:59,838 best_value: 8969.0 median: 0.0 mean: 2711.176
2024-02-20 22:00:59,839 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:02,384 Finished generation: 699 Max generations: 1000
2024-02-20 22:01:02,385 best_value: 8969.0 median: 2568.0 mean: 2768.284
2024-02-20 22:01:02,385 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:04,982 Finished generation: 700 Max generations: 1000
2024-02-20 22:01:04,983 best_value: 8969.0 median: 98.0 mean: 2790.756
2024-02-20 22:01:04,983 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:07,624 Finished generation: 701 Max generations: 1000
2024-02-20 22:01:07,625 best_value: 8969.0 median: 2676.0 mean: 2866.668
2024-02-20 22:01:07,625 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:10,150 Finished generation: 702 Max generations: 1000
2024-02-20 22:01:10,151 best_value: 8969.0 median: 0.0 mean: 2760.524
2024-02-20 22:01:10,151 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:12,554 Finished generation: 703 Max generations: 1000
2024-02-20 22:01:12,554 best_value: 8969.0 median: 0.0 mean: 2654.284
2024-02-20 22:01:12,555 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:14,988 Finished generation: 704 Max generations: 1000
2024-02-20 22:01:14,988 best_value: 8969.0 median: 0.0 mean: 2661.0
2024-02-20 22:01:14,989 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:17,330 Finished generation: 705 Max generations: 1000
2024-02-20 22:01:17,331 best_value: 8969.0 median: 0.0 mean: 2564.672
2024-02-20 22:01:17,331 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:19,758 Finished generation: 706 Max generations: 1000
2024-02-20 22:01:19,759 best_value: 8969.0 median: 0.0 mean: 2605.224
2024-02-20 22:01:19,759 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:22,301 Finished generation: 707 Max generations: 1000
2024-02-20 22:01:22,301 best_value: 8969.0 median: 938.0 mean: 2692.968
2024-02-20 22:01:22,302 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:24,872 Finished generation: 708 Max generations: 1000
2024-02-20 22:01:24,873 best_value: 8969.0 median: 2676.0 mean: 2764.34
2024-02-20 22:01:24,873 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:27,302 Finished generation: 709 Max generations: 1000
2024-02-20 22:01:27,302 best_value: 8969.0 median: 2672.0 mean: 2726.288
2024-02-20 22:01:27,303 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:29,901 Finished generation: 710 Max generations: 1000
2024-02-20 22:01:29,902 best_value: 8969.0 median: 2991.0 mean: 2893.096
2024-02-20 22:01:29,903 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:32,533 Finished generation: 711 Max generations: 1000
2024-02-20 22:01:32,534 best_value: 8969.0 median: 2676.0 mean: 2816.252
2024-02-20 22:01:32,534 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:35,064 Finished generation: 712 Max generations: 1000
2024-02-20 22:01:35,065 best_value: 8969.0 median: 2708.0 mean: 2842.164
2024-02-20 22:01:35,065 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:37,622 Finished generation: 713 Max generations: 1000
2024-02-20 22:01:37,622 best_value: 8969.0 median: 2991.0 mean: 2875.536
2024-02-20 22:01:37,622 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:40,082 Finished generation: 714 Max generations: 1000
2024-02-20 22:01:40,083 best_value: 8969.0 median: 2676.0 mean: 2815.704
2024-02-20 22:01:40,083 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:42,785 Finished generation: 715 Max generations: 1000
2024-02-20 22:01:42,786 best_value: 8969.0 median: 2676.0 mean: 2756.432
2024-02-20 22:01:42,786 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:45,327 Finished generation: 716 Max generations: 1000
2024-02-20 22:01:45,328 best_value: 8969.0 median: 2676.0 mean: 2766.848
2024-02-20 22:01:45,328 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:47,763 Finished generation: 717 Max generations: 1000
2024-02-20 22:01:47,764 best_value: 8969.0 median: 362.0 mean: 2633.924
2024-02-20 22:01:47,764 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:50,222 Finished generation: 718 Max generations: 1000
2024-02-20 22:01:50,223 best_value: 8969.0 median: 362.0 mean: 2638.644
2024-02-20 22:01:50,223 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:52,618 Finished generation: 719 Max generations: 1000
2024-02-20 22:01:52,619 best_value: 8969.0 median: 0.0 mean: 2646.544
2024-02-20 22:01:52,619 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:55,010 Finished generation: 720 Max generations: 1000
2024-02-20 22:01:55,011 best_value: 8969.0 median: 0.0 mean: 2661.496
2024-02-20 22:01:55,011 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:57,363 Finished generation: 721 Max generations: 1000
2024-02-20 22:01:57,364 best_value: 8969.0 median: 0.0 mean: 2627.672
2024-02-20 22:01:57,364 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:01:59,666 Finished generation: 722 Max generations: 1000
2024-02-20 22:01:59,666 best_value: 8969.0 median: 0.0 mean: 2573.128
2024-02-20 22:01:59,667 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:01,936 Finished generation: 723 Max generations: 1000
2024-02-20 22:02:01,936 best_value: 8969.0 median: 0.0 mean: 2563.632
2024-02-20 22:02:01,937 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:04,292 Finished generation: 724 Max generations: 1000
2024-02-20 22:02:04,292 best_value: 8969.0 median: 0.0 mean: 2652.348
2024-02-20 22:02:04,293 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:06,752 Finished generation: 725 Max generations: 1000
2024-02-20 22:02:06,752 best_value: 8969.0 median: 127.0 mean: 2713.932
2024-02-20 22:02:06,753 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:09,054 Finished generation: 726 Max generations: 1000
2024-02-20 22:02:09,054 best_value: 8969.0 median: 0.0 mean: 2620.348
2024-02-20 22:02:09,054 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:11,317 Finished generation: 727 Max generations: 1000
2024-02-20 22:02:11,318 best_value: 8969.0 median: 0.0 mean: 2574.004
2024-02-20 22:02:11,318 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:13,623 Finished generation: 728 Max generations: 1000
2024-02-20 22:02:13,624 best_value: 8969.0 median: 0.0 mean: 2620.736
2024-02-20 22:02:13,624 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:15,943 Finished generation: 729 Max generations: 1000
2024-02-20 22:02:15,944 best_value: 8969.0 median: 0.0 mean: 2688.136
2024-02-20 22:02:15,944 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:18,407 Finished generation: 730 Max generations: 1000
2024-02-20 22:02:18,407 best_value: 8969.0 median: 2676.0 mean: 2854.388
2024-02-20 22:02:18,408 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:20,811 Finished generation: 731 Max generations: 1000
2024-02-20 22:02:20,811 best_value: 8969.0 median: 2676.0 mean: 2815.948
2024-02-20 22:02:20,812 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:23,332 Finished generation: 732 Max generations: 1000
2024-02-20 22:02:23,333 best_value: 8969.0 median: 2991.0 mean: 2997.888
2024-02-20 22:02:23,333 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:25,827 Finished generation: 733 Max generations: 1000
2024-02-20 22:02:25,828 best_value: 8969.0 median: 2991.0 mean: 3025.748
2024-02-20 22:02:25,828 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:28,299 Finished generation: 734 Max generations: 1000
2024-02-20 22:02:28,299 best_value: 8969.0 median: 2676.0 mean: 3061.392
2024-02-20 22:02:28,300 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:30,773 Finished generation: 735 Max generations: 1000
2024-02-20 22:02:30,773 best_value: 8969.0 median: 2991.0 mean: 3072.544
2024-02-20 22:02:30,773 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:33,238 Finished generation: 736 Max generations: 1000
2024-02-20 22:02:33,239 best_value: 8969.0 median: 2676.0 mean: 2977.892
2024-02-20 22:02:33,239 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:35,687 Finished generation: 737 Max generations: 1000
2024-02-20 22:02:35,687 best_value: 8969.0 median: 2676.0 mean: 2922.72
2024-02-20 22:02:35,687 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:38,321 Finished generation: 738 Max generations: 1000
2024-02-20 22:02:38,322 best_value: 8969.0 median: 2991.0 mean: 3154.112
2024-02-20 22:02:38,322 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:40,944 Finished generation: 739 Max generations: 1000
2024-02-20 22:02:40,945 best_value: 8969.0 median: 2991.0 mean: 3168.388
2024-02-20 22:02:40,945 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:43,627 Finished generation: 740 Max generations: 1000
2024-02-20 22:02:43,628 best_value: 8969.0 median: 2995.0 mean: 3252.728
2024-02-20 22:02:43,628 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:46,103 Finished generation: 741 Max generations: 1000
2024-02-20 22:02:46,104 best_value: 8969.0 median: 2991.0 mean: 3025.048
2024-02-20 22:02:46,104 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:48,513 Finished generation: 742 Max generations: 1000
2024-02-20 22:02:48,514 best_value: 8969.0 median: 2676.0 mean: 2935.352
2024-02-20 22:02:48,514 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:50,933 Finished generation: 743 Max generations: 1000
2024-02-20 22:02:50,934 best_value: 8969.0 median: 2676.0 mean: 3003.744
2024-02-20 22:02:50,934 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:53,339 Finished generation: 744 Max generations: 1000
2024-02-20 22:02:53,340 best_value: 8969.0 median: 2676.0 mean: 2906.512
2024-02-20 22:02:53,340 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:55,713 Finished generation: 745 Max generations: 1000
2024-02-20 22:02:55,714 best_value: 8969.0 median: 2676.0 mean: 2869.276
2024-02-20 22:02:55,714 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:02:58,105 Finished generation: 746 Max generations: 1000
2024-02-20 22:02:58,105 best_value: 8969.0 median: 2595.0 mean: 2905.784
2024-02-20 22:02:58,106 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:00,516 Finished generation: 747 Max generations: 1000
2024-02-20 22:03:00,517 best_value: 8969.0 median: 2676.0 mean: 2962.176
2024-02-20 22:03:00,518 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:02,823 Finished generation: 748 Max generations: 1000
2024-02-20 22:03:02,823 best_value: 8969.0 median: 0.0 mean: 2876.028
2024-02-20 22:03:02,824 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:05,140 Finished generation: 749 Max generations: 1000
2024-02-20 22:03:05,141 best_value: 8969.0 median: 0.0 mean: 2849.528
2024-02-20 22:03:05,141 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:07,501 Finished generation: 750 Max generations: 1000
2024-02-20 22:03:07,502 best_value: 8969.0 median: 367.0 mean: 2885.236
2024-02-20 22:03:07,502 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:09,836 Finished generation: 751 Max generations: 1000
2024-02-20 22:03:09,837 best_value: 8969.0 median: 0.0 mean: 2784.096
2024-02-20 22:03:09,837 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:12,177 Finished generation: 752 Max generations: 1000
2024-02-20 22:03:12,177 best_value: 8969.0 median: 0.0 mean: 2787.668
2024-02-20 22:03:12,177 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:14,446 Finished generation: 753 Max generations: 1000
2024-02-20 22:03:14,447 best_value: 8969.0 median: 0.0 mean: 2704.072
2024-02-20 22:03:14,447 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:16,560 Finished generation: 754 Max generations: 1000
2024-02-20 22:03:16,560 best_value: 8969.0 median: 0.0 mean: 2542.852
2024-02-20 22:03:16,561 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:18,840 Finished generation: 755 Max generations: 1000
2024-02-20 22:03:18,841 best_value: 8969.0 median: 0.0 mean: 2668.324
2024-02-20 22:03:18,841 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:21,205 Finished generation: 756 Max generations: 1000
2024-02-20 22:03:21,206 best_value: 8969.0 median: 0.0 mean: 2768.508
2024-02-20 22:03:21,206 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:23,455 Finished generation: 757 Max generations: 1000
2024-02-20 22:03:23,455 best_value: 8969.0 median: 0.0 mean: 2684.304
2024-02-20 22:03:23,456 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:25,668 Finished generation: 758 Max generations: 1000
2024-02-20 22:03:25,668 best_value: 8969.0 median: 0.0 mean: 2592.308
2024-02-20 22:03:25,669 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:27,982 Finished generation: 759 Max generations: 1000
2024-02-20 22:03:27,982 best_value: 8969.0 median: 0.0 mean: 2646.184
2024-02-20 22:03:27,982 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:30,395 Finished generation: 760 Max generations: 1000
2024-02-20 22:03:30,396 best_value: 8969.0 median: 2676.0 mean: 2769.82
2024-02-20 22:03:30,396 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:32,751 Finished generation: 761 Max generations: 1000
2024-02-20 22:03:32,751 best_value: 8969.0 median: 0.0 mean: 2669.252
2024-02-20 22:03:32,751 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:35,110 Finished generation: 762 Max generations: 1000
2024-02-20 22:03:35,110 best_value: 8969.0 median: 0.0 mean: 2695.448
2024-02-20 22:03:35,110 import numpy as np
import math
rules = np.array([[math.log(abs((+math.log(abs(math.sin(+(2.7)+math.sin(-math.sin(1.8 ) ) )))))), math.log(abs(6.0)), math.log(abs(9.7))], [(+(0.5)), pow(math.sin(1.2 ), 1.1), 0.9], [1.8, 1.2, math.log(abs(math.sin((1.4)-7.8*0.9 )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:37,441 Finished generation: 763 Max generations: 1000
2024-02-20 22:03:37,442 best_value: 9056.0 median: 0.0 mean: 2715.46
2024-02-20 22:03:37,442 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:39,813 Finished generation: 764 Max generations: 1000
2024-02-20 22:03:39,814 best_value: 9056.0 median: 0.0 mean: 2726.86
2024-02-20 22:03:39,814 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:42,103 Finished generation: 765 Max generations: 1000
2024-02-20 22:03:42,104 best_value: 9056.0 median: 0.0 mean: 2718.864
2024-02-20 22:03:42,104 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:44,377 Finished generation: 766 Max generations: 1000
2024-02-20 22:03:44,377 best_value: 9056.0 median: 0.0 mean: 2701.164
2024-02-20 22:03:44,378 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:46,633 Finished generation: 767 Max generations: 1000
2024-02-20 22:03:46,633 best_value: 9056.0 median: 0.0 mean: 2723.86
2024-02-20 22:03:46,634 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:48,892 Finished generation: 768 Max generations: 1000
2024-02-20 22:03:48,893 best_value: 9056.0 median: 0.0 mean: 2648.492
2024-02-20 22:03:48,893 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:51,301 Finished generation: 769 Max generations: 1000
2024-02-20 22:03:51,301 best_value: 9056.0 median: 2676.0 mean: 2809.864
2024-02-20 22:03:51,302 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:53,768 Finished generation: 770 Max generations: 1000
2024-02-20 22:03:53,769 best_value: 9056.0 median: 2676.0 mean: 2889.54
2024-02-20 22:03:53,769 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:56,154 Finished generation: 771 Max generations: 1000
2024-02-20 22:03:56,154 best_value: 9056.0 median: 2676.0 mean: 2824.748
2024-02-20 22:03:56,155 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:03:58,472 Finished generation: 772 Max generations: 1000
2024-02-20 22:03:58,472 best_value: 9056.0 median: 0.0 mean: 2718.26
2024-02-20 22:03:58,472 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:00,887 Finished generation: 773 Max generations: 1000
2024-02-20 22:04:00,888 best_value: 9056.0 median: 2676.0 mean: 2824.44
2024-02-20 22:04:00,888 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:03,431 Finished generation: 774 Max generations: 1000
2024-02-20 22:04:03,431 best_value: 9056.0 median: 2676.0 mean: 2845.376
2024-02-20 22:04:03,432 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:06,076 Finished generation: 775 Max generations: 1000
2024-02-20 22:04:06,076 best_value: 9056.0 median: 2676.0 mean: 2812.556
2024-02-20 22:04:06,076 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:08,615 Finished generation: 776 Max generations: 1000
2024-02-20 22:04:08,616 best_value: 9056.0 median: 2676.0 mean: 2814.916
2024-02-20 22:04:08,616 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:11,144 Finished generation: 777 Max generations: 1000
2024-02-20 22:04:11,145 best_value: 9056.0 median: 2676.0 mean: 2875.796
2024-02-20 22:04:11,145 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:13,607 Finished generation: 778 Max generations: 1000
2024-02-20 22:04:13,608 best_value: 9056.0 median: 0.0 mean: 2778.596
2024-02-20 22:04:13,608 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:16,141 Finished generation: 779 Max generations: 1000
2024-02-20 22:04:16,142 best_value: 9056.0 median: 2676.0 mean: 2930.468
2024-02-20 22:04:16,142 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:18,579 Finished generation: 780 Max generations: 1000
2024-02-20 22:04:18,579 best_value: 9056.0 median: 2676.0 mean: 2875.332
2024-02-20 22:04:18,580 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:21,019 Finished generation: 781 Max generations: 1000
2024-02-20 22:04:21,020 best_value: 9056.0 median: 2676.0 mean: 2866.384
2024-02-20 22:04:21,020 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:23,575 Finished generation: 782 Max generations: 1000
2024-02-20 22:04:23,575 best_value: 9056.0 median: 2676.0 mean: 2969.0
2024-02-20 22:04:23,575 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:25,997 Finished generation: 783 Max generations: 1000
2024-02-20 22:04:25,997 best_value: 9056.0 median: 2656.0 mean: 2886.884
2024-02-20 22:04:25,998 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:28,418 Finished generation: 784 Max generations: 1000
2024-02-20 22:04:28,419 best_value: 9056.0 median: 2656.0 mean: 2859.18
2024-02-20 22:04:28,419 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:30,788 Finished generation: 785 Max generations: 1000
2024-02-20 22:04:30,789 best_value: 9056.0 median: 0.0 mean: 2793.108
2024-02-20 22:04:30,789 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:33,169 Finished generation: 786 Max generations: 1000
2024-02-20 22:04:33,169 best_value: 9056.0 median: 0.0 mean: 2828.408
2024-02-20 22:04:33,170 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:35,567 Finished generation: 787 Max generations: 1000
2024-02-20 22:04:35,567 best_value: 9056.0 median: 2676.0 mean: 2897.608
2024-02-20 22:04:35,568 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:37,886 Finished generation: 788 Max generations: 1000
2024-02-20 22:04:37,887 best_value: 9056.0 median: 0.0 mean: 2772.044
2024-02-20 22:04:37,887 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:40,194 Finished generation: 789 Max generations: 1000
2024-02-20 22:04:40,195 best_value: 9056.0 median: 0.0 mean: 2747.856
2024-02-20 22:04:40,195 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:42,510 Finished generation: 790 Max generations: 1000
2024-02-20 22:04:42,511 best_value: 9056.0 median: 0.0 mean: 2734.42
2024-02-20 22:04:42,511 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:44,826 Finished generation: 791 Max generations: 1000
2024-02-20 22:04:44,827 best_value: 9056.0 median: 0.0 mean: 2707.48
2024-02-20 22:04:44,827 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:47,243 Finished generation: 792 Max generations: 1000
2024-02-20 22:04:47,244 best_value: 9056.0 median: 2676.0 mean: 2784.02
2024-02-20 22:04:47,244 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:49,644 Finished generation: 793 Max generations: 1000
2024-02-20 22:04:49,644 best_value: 9056.0 median: 7.0 mean: 2797.004
2024-02-20 22:04:49,645 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:51,958 Finished generation: 794 Max generations: 1000
2024-02-20 22:04:51,958 best_value: 9056.0 median: 0.0 mean: 2677.28
2024-02-20 22:04:51,959 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:54,304 Finished generation: 795 Max generations: 1000
2024-02-20 22:04:54,305 best_value: 9056.0 median: 48.0 mean: 2752.632
2024-02-20 22:04:54,305 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:56,667 Finished generation: 796 Max generations: 1000
2024-02-20 22:04:56,667 best_value: 9056.0 median: 0.0 mean: 2788.856
2024-02-20 22:04:56,667 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:04:59,026 Finished generation: 797 Max generations: 1000
2024-02-20 22:04:59,026 best_value: 9056.0 median: 0.0 mean: 2752.224
2024-02-20 22:04:59,027 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:01,426 Finished generation: 798 Max generations: 1000
2024-02-20 22:05:01,426 best_value: 9056.0 median: 2676.0 mean: 2873.744
2024-02-20 22:05:01,426 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:03,643 Finished generation: 799 Max generations: 1000
2024-02-20 22:05:03,644 best_value: 9056.0 median: 0.0 mean: 2655.736
2024-02-20 22:05:03,644 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:05,924 Finished generation: 800 Max generations: 1000
2024-02-20 22:05:05,925 best_value: 9056.0 median: 0.0 mean: 2743.688
2024-02-20 22:05:05,925 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:08,335 Finished generation: 801 Max generations: 1000
2024-02-20 22:05:08,336 best_value: 9056.0 median: 2437.0 mean: 2828.24
2024-02-20 22:05:08,336 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:10,705 Finished generation: 802 Max generations: 1000
2024-02-20 22:05:10,706 best_value: 9056.0 median: 0.0 mean: 2751.456
2024-02-20 22:05:10,706 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:13,202 Finished generation: 803 Max generations: 1000
2024-02-20 22:05:13,203 best_value: 9056.0 median: 2676.0 mean: 2910.772
2024-02-20 22:05:13,203 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:15,691 Finished generation: 804 Max generations: 1000
2024-02-20 22:05:15,692 best_value: 9056.0 median: 2676.0 mean: 2919.132
2024-02-20 22:05:15,692 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:18,086 Finished generation: 805 Max generations: 1000
2024-02-20 22:05:18,087 best_value: 9056.0 median: 0.0 mean: 2835.16
2024-02-20 22:05:18,087 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:20,437 Finished generation: 806 Max generations: 1000
2024-02-20 22:05:20,438 best_value: 9056.0 median: 0.0 mean: 2864.928
2024-02-20 22:05:20,439 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:22,730 Finished generation: 807 Max generations: 1000
2024-02-20 22:05:22,730 best_value: 9056.0 median: 0.0 mean: 2786.24
2024-02-20 22:05:22,730 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:24,992 Finished generation: 808 Max generations: 1000
2024-02-20 22:05:24,992 best_value: 9056.0 median: 0.0 mean: 2762.016
2024-02-20 22:05:24,993 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:27,306 Finished generation: 809 Max generations: 1000
2024-02-20 22:05:27,306 best_value: 9056.0 median: 0.0 mean: 2762.28
2024-02-20 22:05:27,307 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:29,669 Finished generation: 810 Max generations: 1000
2024-02-20 22:05:29,670 best_value: 9056.0 median: 0.0 mean: 2775.204
2024-02-20 22:05:29,670 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:31,932 Finished generation: 811 Max generations: 1000
2024-02-20 22:05:31,933 best_value: 9056.0 median: 0.0 mean: 2674.488
2024-02-20 22:05:31,933 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:34,300 Finished generation: 812 Max generations: 1000
2024-02-20 22:05:34,301 best_value: 9056.0 median: 0.0 mean: 2767.44
2024-02-20 22:05:34,301 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:36,610 Finished generation: 813 Max generations: 1000
2024-02-20 22:05:36,610 best_value: 9056.0 median: 0.0 mean: 2802.68
2024-02-20 22:05:36,610 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:38,959 Finished generation: 814 Max generations: 1000
2024-02-20 22:05:38,959 best_value: 9056.0 median: 0.0 mean: 2747.3
2024-02-20 22:05:38,960 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:41,273 Finished generation: 815 Max generations: 1000
2024-02-20 22:05:41,273 best_value: 9056.0 median: 0.0 mean: 2739.812
2024-02-20 22:05:41,274 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:43,673 Finished generation: 816 Max generations: 1000
2024-02-20 22:05:43,674 best_value: 9056.0 median: 0.0 mean: 2750.636
2024-02-20 22:05:43,674 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:45,949 Finished generation: 817 Max generations: 1000
2024-02-20 22:05:45,950 best_value: 9056.0 median: 0.0 mean: 2693.472
2024-02-20 22:05:45,950 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:48,372 Finished generation: 818 Max generations: 1000
2024-02-20 22:05:48,373 best_value: 9056.0 median: 1668.0 mean: 2792.936
2024-02-20 22:05:48,373 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:50,866 Finished generation: 819 Max generations: 1000
2024-02-20 22:05:50,867 best_value: 9056.0 median: 2676.0 mean: 2849.232
2024-02-20 22:05:50,867 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:53,233 Finished generation: 820 Max generations: 1000
2024-02-20 22:05:53,234 best_value: 9056.0 median: 0.0 mean: 2742.036
2024-02-20 22:05:53,234 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:55,566 Finished generation: 821 Max generations: 1000
2024-02-20 22:05:55,567 best_value: 9056.0 median: 0.0 mean: 2738.112
2024-02-20 22:05:55,567 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:05:57,963 Finished generation: 822 Max generations: 1000
2024-02-20 22:05:57,963 best_value: 9056.0 median: 1510.0 mean: 2754.572
2024-02-20 22:05:57,963 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:00,371 Finished generation: 823 Max generations: 1000
2024-02-20 22:06:00,371 best_value: 9056.0 median: 2521.0 mean: 2883.036
2024-02-20 22:06:00,371 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:02,799 Finished generation: 824 Max generations: 1000
2024-02-20 22:06:02,800 best_value: 9056.0 median: 76.0 mean: 2815.512
2024-02-20 22:06:02,800 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:05,249 Finished generation: 825 Max generations: 1000
2024-02-20 22:06:05,250 best_value: 9056.0 median: 2262.0 mean: 2854.648
2024-02-20 22:06:05,250 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:07,651 Finished generation: 826 Max generations: 1000
2024-02-20 22:06:07,652 best_value: 9056.0 median: 2043.0 mean: 2779.872
2024-02-20 22:06:07,653 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:10,118 Finished generation: 827 Max generations: 1000
2024-02-20 22:06:10,119 best_value: 9056.0 median: 2676.0 mean: 2852.448
2024-02-20 22:06:10,119 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:12,546 Finished generation: 828 Max generations: 1000
2024-02-20 22:06:12,547 best_value: 9056.0 median: 2521.0 mean: 2829.7
2024-02-20 22:06:12,547 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:14,981 Finished generation: 829 Max generations: 1000
2024-02-20 22:06:14,981 best_value: 9056.0 median: 2521.0 mean: 2829.716
2024-02-20 22:06:14,982 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:17,412 Finished generation: 830 Max generations: 1000
2024-02-20 22:06:17,412 best_value: 9056.0 median: 2676.0 mean: 2915.352
2024-02-20 22:06:17,413 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:19,916 Finished generation: 831 Max generations: 1000
2024-02-20 22:06:19,917 best_value: 9056.0 median: 2676.0 mean: 2867.392
2024-02-20 22:06:19,917 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:22,321 Finished generation: 832 Max generations: 1000
2024-02-20 22:06:22,321 best_value: 9056.0 median: 460.0 mean: 2801.416
2024-02-20 22:06:22,321 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:24,744 Finished generation: 833 Max generations: 1000
2024-02-20 22:06:24,745 best_value: 9056.0 median: 2676.0 mean: 2883.948
2024-02-20 22:06:24,745 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:27,148 Finished generation: 834 Max generations: 1000
2024-02-20 22:06:27,149 best_value: 9056.0 median: 2480.0 mean: 2851.316
2024-02-20 22:06:27,149 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:29,583 Finished generation: 835 Max generations: 1000
2024-02-20 22:06:29,584 best_value: 9056.0 median: 2480.0 mean: 2892.36
2024-02-20 22:06:29,584 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:31,811 Finished generation: 836 Max generations: 1000
2024-02-20 22:06:31,811 best_value: 9056.0 median: 0.0 mean: 2675.24
2024-02-20 22:06:31,811 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:34,143 Finished generation: 837 Max generations: 1000
2024-02-20 22:06:34,144 best_value: 9056.0 median: 0.0 mean: 2735.872
2024-02-20 22:06:34,144 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:36,531 Finished generation: 838 Max generations: 1000
2024-02-20 22:06:36,531 best_value: 9056.0 median: 1106.0 mean: 2873.804
2024-02-20 22:06:36,531 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:38,966 Finished generation: 839 Max generations: 1000
2024-02-20 22:06:38,967 best_value: 9056.0 median: 2676.0 mean: 2929.2
2024-02-20 22:06:38,967 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:41,347 Finished generation: 840 Max generations: 1000
2024-02-20 22:06:41,348 best_value: 9056.0 median: 0.0 mean: 2903.352
2024-02-20 22:06:41,348 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:43,650 Finished generation: 841 Max generations: 1000
2024-02-20 22:06:43,650 best_value: 9056.0 median: 0.0 mean: 2765.824
2024-02-20 22:06:43,651 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:45,979 Finished generation: 842 Max generations: 1000
2024-02-20 22:06:45,980 best_value: 9056.0 median: 0.0 mean: 2753.072
2024-02-20 22:06:45,980 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:48,346 Finished generation: 843 Max generations: 1000
2024-02-20 22:06:48,347 best_value: 9056.0 median: 0.0 mean: 2782.512
2024-02-20 22:06:48,347 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:50,790 Finished generation: 844 Max generations: 1000
2024-02-20 22:06:50,790 best_value: 9056.0 median: 905.0 mean: 2866.256
2024-02-20 22:06:50,790 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:53,282 Finished generation: 845 Max generations: 1000
2024-02-20 22:06:53,282 best_value: 9056.0 median: 2676.0 mean: 2938.532
2024-02-20 22:06:53,283 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:55,744 Finished generation: 846 Max generations: 1000
2024-02-20 22:06:55,745 best_value: 9056.0 median: 2676.0 mean: 2977.596
2024-02-20 22:06:55,745 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:06:58,069 Finished generation: 847 Max generations: 1000
2024-02-20 22:06:58,069 best_value: 9056.0 median: 0.0 mean: 2821.428
2024-02-20 22:06:58,069 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:00,360 Finished generation: 848 Max generations: 1000
2024-02-20 22:07:00,361 best_value: 9056.0 median: 0.0 mean: 2781.728
2024-02-20 22:07:00,361 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:02,688 Finished generation: 849 Max generations: 1000
2024-02-20 22:07:02,689 best_value: 9056.0 median: 0.0 mean: 2623.388
2024-02-20 22:07:02,689 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:05,029 Finished generation: 850 Max generations: 1000
2024-02-20 22:07:05,029 best_value: 9056.0 median: 0.0 mean: 2695.26
2024-02-20 22:07:05,030 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:07,265 Finished generation: 851 Max generations: 1000
2024-02-20 22:07:07,266 best_value: 9056.0 median: 0.0 mean: 2558.692
2024-02-20 22:07:07,266 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:09,524 Finished generation: 852 Max generations: 1000
2024-02-20 22:07:09,524 best_value: 9056.0 median: 0.0 mean: 2559.728
2024-02-20 22:07:09,525 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:11,846 Finished generation: 853 Max generations: 1000
2024-02-20 22:07:11,846 best_value: 9056.0 median: 0.0 mean: 2671.352
2024-02-20 22:07:11,847 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:14,160 Finished generation: 854 Max generations: 1000
2024-02-20 22:07:14,161 best_value: 9056.0 median: 0.0 mean: 2692.264
2024-02-20 22:07:14,161 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:16,550 Finished generation: 855 Max generations: 1000
2024-02-20 22:07:16,550 best_value: 9056.0 median: 905.0 mean: 2738.932
2024-02-20 22:07:16,551 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:18,992 Finished generation: 856 Max generations: 1000
2024-02-20 22:07:18,992 best_value: 9056.0 median: 2341.0 mean: 2834.72
2024-02-20 22:07:18,992 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:21,457 Finished generation: 857 Max generations: 1000
2024-02-20 22:07:21,458 best_value: 9056.0 median: 2636.0 mean: 2908.992
2024-02-20 22:07:21,458 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:24,132 Finished generation: 858 Max generations: 1000
2024-02-20 22:07:24,133 best_value: 9056.0 median: 2991.0 mean: 3115.384
2024-02-20 22:07:24,133 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:26,682 Finished generation: 859 Max generations: 1000
2024-02-20 22:07:26,682 best_value: 9056.0 median: 2676.0 mean: 3007.908
2024-02-20 22:07:26,682 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:29,072 Finished generation: 860 Max generations: 1000
2024-02-20 22:07:29,073 best_value: 9056.0 median: 0.0 mean: 2898.36
2024-02-20 22:07:29,073 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:31,449 Finished generation: 861 Max generations: 1000
2024-02-20 22:07:31,449 best_value: 9056.0 median: 0.0 mean: 2875.648
2024-02-20 22:07:31,449 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:33,867 Finished generation: 862 Max generations: 1000
2024-02-20 22:07:33,868 best_value: 9056.0 median: 0.0 mean: 2871.716
2024-02-20 22:07:33,869 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:36,491 Finished generation: 863 Max generations: 1000
2024-02-20 22:07:36,492 best_value: 9056.0 median: 0.0 mean: 2683.52
2024-02-20 22:07:36,492 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:38,943 Finished generation: 864 Max generations: 1000
2024-02-20 22:07:38,943 best_value: 9056.0 median: 0.0 mean: 2734.156
2024-02-20 22:07:38,944 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:41,201 Finished generation: 865 Max generations: 1000
2024-02-20 22:07:41,201 best_value: 9056.0 median: 0.0 mean: 2679.8
2024-02-20 22:07:41,202 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:43,517 Finished generation: 866 Max generations: 1000
2024-02-20 22:07:43,517 best_value: 9056.0 median: 0.0 mean: 2809.088
2024-02-20 22:07:43,518 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:45,813 Finished generation: 867 Max generations: 1000
2024-02-20 22:07:45,814 best_value: 9056.0 median: 0.0 mean: 2732.584
2024-02-20 22:07:45,814 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:48,160 Finished generation: 868 Max generations: 1000
2024-02-20 22:07:48,160 best_value: 9056.0 median: 0.0 mean: 2777.856
2024-02-20 22:07:48,161 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:50,542 Finished generation: 869 Max generations: 1000
2024-02-20 22:07:50,542 best_value: 9056.0 median: 377.0 mean: 2868.588
2024-02-20 22:07:50,543 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:52,878 Finished generation: 870 Max generations: 1000
2024-02-20 22:07:52,879 best_value: 9056.0 median: 0.0 mean: 2828.344
2024-02-20 22:07:52,879 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:55,144 Finished generation: 871 Max generations: 1000
2024-02-20 22:07:55,145 best_value: 9056.0 median: 0.0 mean: 2791.936
2024-02-20 22:07:55,145 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:57,469 Finished generation: 872 Max generations: 1000
2024-02-20 22:07:57,469 best_value: 9056.0 median: 0.0 mean: 2868.04
2024-02-20 22:07:57,470 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:07:59,765 Finished generation: 873 Max generations: 1000
2024-02-20 22:07:59,766 best_value: 9056.0 median: 0.0 mean: 2825.78
2024-02-20 22:07:59,766 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:02,030 Finished generation: 874 Max generations: 1000
2024-02-20 22:08:02,030 best_value: 9056.0 median: 0.0 mean: 2732.984
2024-02-20 22:08:02,031 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:04,208 Finished generation: 875 Max generations: 1000
2024-02-20 22:08:04,209 best_value: 9056.0 median: 0.0 mean: 2611.532
2024-02-20 22:08:04,209 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:06,276 Finished generation: 876 Max generations: 1000
2024-02-20 22:08:06,277 best_value: 9056.0 median: 0.0 mean: 2563.644
2024-02-20 22:08:06,277 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:08,491 Finished generation: 877 Max generations: 1000
2024-02-20 22:08:08,491 best_value: 9056.0 median: 0.0 mean: 2631.352
2024-02-20 22:08:08,492 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:10,681 Finished generation: 878 Max generations: 1000
2024-02-20 22:08:10,681 best_value: 9056.0 median: 0.0 mean: 2685.54
2024-02-20 22:08:10,681 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:12,879 Finished generation: 879 Max generations: 1000
2024-02-20 22:08:12,879 best_value: 9056.0 median: 0.0 mean: 2811.616
2024-02-20 22:08:12,879 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:15,037 Finished generation: 880 Max generations: 1000
2024-02-20 22:08:15,038 best_value: 9056.0 median: 0.0 mean: 2720.188
2024-02-20 22:08:15,038 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:17,181 Finished generation: 881 Max generations: 1000
2024-02-20 22:08:17,181 best_value: 9056.0 median: 0.0 mean: 2645.016
2024-02-20 22:08:17,182 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:19,476 Finished generation: 882 Max generations: 1000
2024-02-20 22:08:19,476 best_value: 9056.0 median: 0.0 mean: 2760.04
2024-02-20 22:08:19,477 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:21,780 Finished generation: 883 Max generations: 1000
2024-02-20 22:08:21,781 best_value: 9056.0 median: 0.0 mean: 2807.88
2024-02-20 22:08:21,781 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:23,994 Finished generation: 884 Max generations: 1000
2024-02-20 22:08:23,995 best_value: 9056.0 median: 0.0 mean: 2757.14
2024-02-20 22:08:23,995 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:26,279 Finished generation: 885 Max generations: 1000
2024-02-20 22:08:26,280 best_value: 9056.0 median: 0.0 mean: 2843.98
2024-02-20 22:08:26,280 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:28,801 Finished generation: 886 Max generations: 1000
2024-02-20 22:08:28,802 best_value: 9056.0 median: 0.0 mean: 2836.384
2024-02-20 22:08:28,802 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:31,126 Finished generation: 887 Max generations: 1000
2024-02-20 22:08:31,127 best_value: 9056.0 median: 0.0 mean: 2745.048
2024-02-20 22:08:31,127 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:33,442 Finished generation: 888 Max generations: 1000
2024-02-20 22:08:33,442 best_value: 9056.0 median: 0.0 mean: 2711.752
2024-02-20 22:08:33,442 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:35,755 Finished generation: 889 Max generations: 1000
2024-02-20 22:08:35,755 best_value: 9056.0 median: 0.0 mean: 2783.364
2024-02-20 22:08:35,755 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:38,155 Finished generation: 890 Max generations: 1000
2024-02-20 22:08:38,156 best_value: 9056.0 median: 0.0 mean: 2831.652
2024-02-20 22:08:38,156 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:40,378 Finished generation: 891 Max generations: 1000
2024-02-20 22:08:40,378 best_value: 9056.0 median: 0.0 mean: 2665.068
2024-02-20 22:08:40,378 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:42,669 Finished generation: 892 Max generations: 1000
2024-02-20 22:08:42,670 best_value: 9056.0 median: 0.0 mean: 2738.808
2024-02-20 22:08:42,670 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:45,037 Finished generation: 893 Max generations: 1000
2024-02-20 22:08:45,038 best_value: 9056.0 median: 2.0 mean: 2787.232
2024-02-20 22:08:45,038 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:47,387 Finished generation: 894 Max generations: 1000
2024-02-20 22:08:47,387 best_value: 9056.0 median: 0.0 mean: 2738.872
2024-02-20 22:08:47,387 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:49,697 Finished generation: 895 Max generations: 1000
2024-02-20 22:08:49,698 best_value: 9056.0 median: 0.0 mean: 2628.052
2024-02-20 22:08:49,698 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:52,148 Finished generation: 896 Max generations: 1000
2024-02-20 22:08:52,149 best_value: 9056.0 median: 0.0 mean: 2632.232
2024-02-20 22:08:52,150 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:54,552 Finished generation: 897 Max generations: 1000
2024-02-20 22:08:54,553 best_value: 9056.0 median: 0.0 mean: 2729.028
2024-02-20 22:08:54,553 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:56,760 Finished generation: 898 Max generations: 1000
2024-02-20 22:08:56,761 best_value: 9056.0 median: 0.0 mean: 2721.236
2024-02-20 22:08:56,761 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:08:59,079 Finished generation: 899 Max generations: 1000
2024-02-20 22:08:59,079 best_value: 9056.0 median: 0.0 mean: 2781.228
2024-02-20 22:08:59,079 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:01,398 Finished generation: 900 Max generations: 1000
2024-02-20 22:09:01,399 best_value: 9056.0 median: 0.0 mean: 2798.996
2024-02-20 22:09:01,399 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:03,799 Finished generation: 901 Max generations: 1000
2024-02-20 22:09:03,800 best_value: 9056.0 median: 2519.0 mean: 2866.3
2024-02-20 22:09:03,800 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:06,077 Finished generation: 902 Max generations: 1000
2024-02-20 22:09:06,077 best_value: 9056.0 median: 0.0 mean: 2779.012
2024-02-20 22:09:06,077 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:08,523 Finished generation: 903 Max generations: 1000
2024-02-20 22:09:08,523 best_value: 9056.0 median: 2671.0 mean: 2949.76
2024-02-20 22:09:08,524 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:10,782 Finished generation: 904 Max generations: 1000
2024-02-20 22:09:10,783 best_value: 9056.0 median: 0.0 mean: 2857.2
2024-02-20 22:09:10,783 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:13,019 Finished generation: 905 Max generations: 1000
2024-02-20 22:09:13,019 best_value: 9056.0 median: 0.0 mean: 2813.388
2024-02-20 22:09:13,020 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:15,314 Finished generation: 906 Max generations: 1000
2024-02-20 22:09:15,314 best_value: 9056.0 median: 0.0 mean: 2850.248
2024-02-20 22:09:15,314 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:17,611 Finished generation: 907 Max generations: 1000
2024-02-20 22:09:17,612 best_value: 9056.0 median: 0.0 mean: 2773.7
2024-02-20 22:09:17,612 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:20,236 Finished generation: 908 Max generations: 1000
2024-02-20 22:09:20,236 best_value: 9056.0 median: 2676.0 mean: 3047.4
2024-02-20 22:09:20,237 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:22,797 Finished generation: 909 Max generations: 1000
2024-02-20 22:09:22,798 best_value: 9056.0 median: 2676.0 mean: 2959.936
2024-02-20 22:09:22,799 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:25,335 Finished generation: 910 Max generations: 1000
2024-02-20 22:09:25,336 best_value: 9056.0 median: 2676.0 mean: 2949.004
2024-02-20 22:09:25,336 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:27,981 Finished generation: 911 Max generations: 1000
2024-02-20 22:09:27,981 best_value: 9056.0 median: 2677.0 mean: 3052.024
2024-02-20 22:09:27,981 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:30,477 Finished generation: 912 Max generations: 1000
2024-02-20 22:09:30,477 best_value: 9056.0 median: 2676.0 mean: 2997.92
2024-02-20 22:09:30,478 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:32,964 Finished generation: 913 Max generations: 1000
2024-02-20 22:09:32,964 best_value: 9056.0 median: 2676.0 mean: 3027.336
2024-02-20 22:09:32,965 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:35,270 Finished generation: 914 Max generations: 1000
2024-02-20 22:09:35,271 best_value: 9056.0 median: 0.0 mean: 2905.908
2024-02-20 22:09:35,271 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:37,826 Finished generation: 915 Max generations: 1000
2024-02-20 22:09:37,827 best_value: 9056.0 median: 0.0 mean: 2915.048
2024-02-20 22:09:37,827 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:40,106 Finished generation: 916 Max generations: 1000
2024-02-20 22:09:40,106 best_value: 9056.0 median: 0.0 mean: 2814.808
2024-02-20 22:09:40,107 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:42,344 Finished generation: 917 Max generations: 1000
2024-02-20 22:09:42,344 best_value: 9056.0 median: 0.0 mean: 2794.564
2024-02-20 22:09:42,344 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:44,590 Finished generation: 918 Max generations: 1000
2024-02-20 22:09:44,591 best_value: 9056.0 median: 0.0 mean: 2811.064
2024-02-20 22:09:44,591 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:46,875 Finished generation: 919 Max generations: 1000
2024-02-20 22:09:46,876 best_value: 9056.0 median: 0.0 mean: 2845.42
2024-02-20 22:09:46,876 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:49,155 Finished generation: 920 Max generations: 1000
2024-02-20 22:09:49,155 best_value: 9056.0 median: 0.0 mean: 2776.968
2024-02-20 22:09:49,155 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:51,560 Finished generation: 921 Max generations: 1000
2024-02-20 22:09:51,561 best_value: 9056.0 median: 0.0 mean: 2906.976
2024-02-20 22:09:51,561 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:53,809 Finished generation: 922 Max generations: 1000
2024-02-20 22:09:53,809 best_value: 9056.0 median: 0.0 mean: 2845.624
2024-02-20 22:09:53,810 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:56,112 Finished generation: 923 Max generations: 1000
2024-02-20 22:09:56,113 best_value: 9056.0 median: 0.0 mean: 2888.088
2024-02-20 22:09:56,113 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:09:58,445 Finished generation: 924 Max generations: 1000
2024-02-20 22:09:58,446 best_value: 9056.0 median: 0.0 mean: 2854.4
2024-02-20 22:09:58,446 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:00,747 Finished generation: 925 Max generations: 1000
2024-02-20 22:10:00,748 best_value: 9056.0 median: 0.0 mean: 2811.852
2024-02-20 22:10:00,748 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:02,998 Finished generation: 926 Max generations: 1000
2024-02-20 22:10:02,999 best_value: 9056.0 median: 0.0 mean: 2805.104
2024-02-20 22:10:02,999 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:05,382 Finished generation: 927 Max generations: 1000
2024-02-20 22:10:05,382 best_value: 9056.0 median: 0.0 mean: 2930.06
2024-02-20 22:10:05,383 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:07,722 Finished generation: 928 Max generations: 1000
2024-02-20 22:10:07,723 best_value: 9056.0 median: 0.0 mean: 2830.236
2024-02-20 22:10:07,723 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:10,019 Finished generation: 929 Max generations: 1000
2024-02-20 22:10:10,020 best_value: 9056.0 median: 0.0 mean: 2766.144
2024-02-20 22:10:10,020 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:12,367 Finished generation: 930 Max generations: 1000
2024-02-20 22:10:12,367 best_value: 9056.0 median: 0.0 mean: 2933.628
2024-02-20 22:10:12,368 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:14,735 Finished generation: 931 Max generations: 1000
2024-02-20 22:10:14,735 best_value: 9056.0 median: 0.0 mean: 2951.52
2024-02-20 22:10:14,736 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:17,063 Finished generation: 932 Max generations: 1000
2024-02-20 22:10:17,064 best_value: 9056.0 median: 0.0 mean: 2782.084
2024-02-20 22:10:17,064 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:19,313 Finished generation: 933 Max generations: 1000
2024-02-20 22:10:19,314 best_value: 9056.0 median: 0.0 mean: 2813.488
2024-02-20 22:10:19,314 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:21,517 Finished generation: 934 Max generations: 1000
2024-02-20 22:10:21,518 best_value: 9056.0 median: 0.0 mean: 2829.432
2024-02-20 22:10:21,518 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:23,733 Finished generation: 935 Max generations: 1000
2024-02-20 22:10:23,734 best_value: 9056.0 median: 0.0 mean: 2880.224
2024-02-20 22:10:23,734 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:25,981 Finished generation: 936 Max generations: 1000
2024-02-20 22:10:25,982 best_value: 9056.0 median: 0.0 mean: 2850.32
2024-02-20 22:10:25,982 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:28,287 Finished generation: 937 Max generations: 1000
2024-02-20 22:10:28,288 best_value: 9056.0 median: 0.0 mean: 2858.492
2024-02-20 22:10:28,288 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:30,543 Finished generation: 938 Max generations: 1000
2024-02-20 22:10:30,544 best_value: 9056.0 median: 0.0 mean: 2717.584
2024-02-20 22:10:30,544 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:32,793 Finished generation: 939 Max generations: 1000
2024-02-20 22:10:32,794 best_value: 9056.0 median: 0.0 mean: 2824.548
2024-02-20 22:10:32,794 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:34,949 Finished generation: 940 Max generations: 1000
2024-02-20 22:10:34,949 best_value: 9056.0 median: 0.0 mean: 2713.432
2024-02-20 22:10:34,950 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:37,005 Finished generation: 941 Max generations: 1000
2024-02-20 22:10:37,006 best_value: 9056.0 median: 0.0 mean: 2617.6
2024-02-20 22:10:37,006 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:39,006 Finished generation: 942 Max generations: 1000
2024-02-20 22:10:39,006 best_value: 9056.0 median: 0.0 mean: 2516.168
2024-02-20 22:10:39,006 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:41,081 Finished generation: 943 Max generations: 1000
2024-02-20 22:10:41,082 best_value: 9056.0 median: 0.0 mean: 2631.084
2024-02-20 22:10:41,082 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:43,184 Finished generation: 944 Max generations: 1000
2024-02-20 22:10:43,184 best_value: 9056.0 median: 0.0 mean: 2710.176
2024-02-20 22:10:43,185 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:45,235 Finished generation: 945 Max generations: 1000
2024-02-20 22:10:45,236 best_value: 9056.0 median: 0.0 mean: 2696.424
2024-02-20 22:10:45,236 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:47,366 Finished generation: 946 Max generations: 1000
2024-02-20 22:10:47,367 best_value: 9056.0 median: 0.0 mean: 2745.808
2024-02-20 22:10:47,367 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:49,502 Finished generation: 947 Max generations: 1000
2024-02-20 22:10:49,503 best_value: 9056.0 median: 0.0 mean: 2793.484
2024-02-20 22:10:49,503 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:51,676 Finished generation: 948 Max generations: 1000
2024-02-20 22:10:51,676 best_value: 9056.0 median: 0.0 mean: 2823.292
2024-02-20 22:10:51,676 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:54,081 Finished generation: 949 Max generations: 1000
2024-02-20 22:10:54,081 best_value: 9056.0 median: 0.0 mean: 2812.312
2024-02-20 22:10:54,082 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:56,443 Finished generation: 950 Max generations: 1000
2024-02-20 22:10:56,443 best_value: 9056.0 median: 0.0 mean: 2876.14
2024-02-20 22:10:56,444 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:10:58,803 Finished generation: 951 Max generations: 1000
2024-02-20 22:10:58,803 best_value: 9056.0 median: 0.0 mean: 2943.588
2024-02-20 22:10:58,803 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:01,113 Finished generation: 952 Max generations: 1000
2024-02-20 22:11:01,114 best_value: 9056.0 median: 0.0 mean: 2965.0
2024-02-20 22:11:01,114 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:03,479 Finished generation: 953 Max generations: 1000
2024-02-20 22:11:03,480 best_value: 9056.0 median: 0.0 mean: 3024.268
2024-02-20 22:11:03,480 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:05,908 Finished generation: 954 Max generations: 1000
2024-02-20 22:11:05,909 best_value: 9056.0 median: 0.0 mean: 2949.664
2024-02-20 22:11:05,909 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:08,274 Finished generation: 955 Max generations: 1000
2024-02-20 22:11:08,275 best_value: 9056.0 median: 0.0 mean: 2925.82
2024-02-20 22:11:08,275 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:10,591 Finished generation: 956 Max generations: 1000
2024-02-20 22:11:10,592 best_value: 9056.0 median: 0.0 mean: 2967.468
2024-02-20 22:11:10,592 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:12,928 Finished generation: 957 Max generations: 1000
2024-02-20 22:11:12,929 best_value: 9056.0 median: 0.0 mean: 3057.976
2024-02-20 22:11:12,929 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:15,406 Finished generation: 958 Max generations: 1000
2024-02-20 22:11:15,407 best_value: 9056.0 median: 2676.0 mean: 3222.692
2024-02-20 22:11:15,407 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:17,849 Finished generation: 959 Max generations: 1000
2024-02-20 22:11:17,849 best_value: 9056.0 median: 0.0 mean: 3019.34
2024-02-20 22:11:17,849 import numpy as np
import math
rules = np.array([[math.sin(6.2 ), (math.log(abs(-(+math.sin(math.log(abs(math.log(abs(8.3))+7.2)) )*math.sin((math.log(abs(5.7/4.3))) ))))), 5.8], [math.sin((2.5) ), 7.4, 2.8], [4.0, 7.0, math.sin(math.log(abs(math.sin(7.3 )*math.sin(math.sin(3.2 ) ))) )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:20,209 Finished generation: 960 Max generations: 1000
2024-02-20 22:11:20,209 best_value: 9062.0 median: 0.0 mean: 2971.036
2024-02-20 22:11:20,210 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:22,437 Finished generation: 961 Max generations: 1000
2024-02-20 22:11:22,438 best_value: 9062.0 median: 0.0 mean: 2903.08
2024-02-20 22:11:22,438 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:24,750 Finished generation: 962 Max generations: 1000
2024-02-20 22:11:24,751 best_value: 9062.0 median: 0.0 mean: 2989.204
2024-02-20 22:11:24,751 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:27,147 Finished generation: 963 Max generations: 1000
2024-02-20 22:11:27,147 best_value: 9062.0 median: 0.0 mean: 2901.432
2024-02-20 22:11:27,148 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:29,550 Finished generation: 964 Max generations: 1000
2024-02-20 22:11:29,551 best_value: 9062.0 median: 2676.0 mean: 3112.452
2024-02-20 22:11:29,551 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:31,992 Finished generation: 965 Max generations: 1000
2024-02-20 22:11:31,992 best_value: 9062.0 median: 2676.0 mean: 3155.488
2024-02-20 22:11:31,993 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:34,412 Finished generation: 966 Max generations: 1000
2024-02-20 22:11:34,412 best_value: 9062.0 median: 2676.0 mean: 3143.168
2024-02-20 22:11:34,412 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:36,901 Finished generation: 967 Max generations: 1000
2024-02-20 22:11:36,902 best_value: 9062.0 median: 2676.0 mean: 3205.856
2024-02-20 22:11:36,902 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:39,325 Finished generation: 968 Max generations: 1000
2024-02-20 22:11:39,325 best_value: 9062.0 median: 2676.0 mean: 3157.408
2024-02-20 22:11:39,325 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:41,812 Finished generation: 969 Max generations: 1000
2024-02-20 22:11:41,813 best_value: 9062.0 median: 2676.0 mean: 3251.104
2024-02-20 22:11:41,813 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:44,158 Finished generation: 970 Max generations: 1000
2024-02-20 22:11:44,159 best_value: 9062.0 median: 0.0 mean: 3096.7
2024-02-20 22:11:44,159 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:46,439 Finished generation: 971 Max generations: 1000
2024-02-20 22:11:46,439 best_value: 9062.0 median: 0.0 mean: 3068.324
2024-02-20 22:11:46,439 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:48,675 Finished generation: 972 Max generations: 1000
2024-02-20 22:11:48,675 best_value: 9062.0 median: 0.0 mean: 2955.48
2024-02-20 22:11:48,676 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:50,907 Finished generation: 973 Max generations: 1000
2024-02-20 22:11:50,908 best_value: 9062.0 median: 0.0 mean: 2898.648
2024-02-20 22:11:50,908 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:53,350 Finished generation: 974 Max generations: 1000
2024-02-20 22:11:53,351 best_value: 9062.0 median: 0.0 mean: 2972.064
2024-02-20 22:11:53,351 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:55,829 Finished generation: 975 Max generations: 1000
2024-02-20 22:11:55,830 best_value: 9062.0 median: 0.0 mean: 3026.924
2024-02-20 22:11:55,830 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:11:58,089 Finished generation: 976 Max generations: 1000
2024-02-20 22:11:58,090 best_value: 9062.0 median: 0.0 mean: 3037.124
2024-02-20 22:11:58,090 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:00,177 Finished generation: 977 Max generations: 1000
2024-02-20 22:12:00,178 best_value: 9062.0 median: 0.0 mean: 2765.44
2024-02-20 22:12:00,178 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:02,140 Finished generation: 978 Max generations: 1000
2024-02-20 22:12:02,141 best_value: 9062.0 median: 0.0 mean: 2603.232
2024-02-20 22:12:02,141 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:04,251 Finished generation: 979 Max generations: 1000
2024-02-20 22:12:04,252 best_value: 9062.0 median: 0.0 mean: 2665.828
2024-02-20 22:12:04,252 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:06,471 Finished generation: 980 Max generations: 1000
2024-02-20 22:12:06,471 best_value: 9062.0 median: 0.0 mean: 2828.684
2024-02-20 22:12:06,472 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:08,799 Finished generation: 981 Max generations: 1000
2024-02-20 22:12:08,800 best_value: 9062.0 median: 0.0 mean: 2856.484
2024-02-20 22:12:08,801 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:11,154 Finished generation: 982 Max generations: 1000
2024-02-20 22:12:11,154 best_value: 9062.0 median: 0.0 mean: 2821.848
2024-02-20 22:12:11,155 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:13,503 Finished generation: 983 Max generations: 1000
2024-02-20 22:12:13,503 best_value: 9062.0 median: 0.0 mean: 2874.928
2024-02-20 22:12:13,504 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:15,726 Finished generation: 984 Max generations: 1000
2024-02-20 22:12:15,726 best_value: 9062.0 median: 0.0 mean: 2790.656
2024-02-20 22:12:15,726 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:17,993 Finished generation: 985 Max generations: 1000
2024-02-20 22:12:17,993 best_value: 9062.0 median: 0.0 mean: 2732.464
2024-02-20 22:12:17,994 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:20,191 Finished generation: 986 Max generations: 1000
2024-02-20 22:12:20,192 best_value: 9062.0 median: 0.0 mean: 2775.22
2024-02-20 22:12:20,192 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:22,388 Finished generation: 987 Max generations: 1000
2024-02-20 22:12:22,388 best_value: 9062.0 median: 0.0 mean: 2732.644
2024-02-20 22:12:22,389 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:24,708 Finished generation: 988 Max generations: 1000
2024-02-20 22:12:24,709 best_value: 9062.0 median: 0.0 mean: 2842.048
2024-02-20 22:12:24,709 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:27,152 Finished generation: 989 Max generations: 1000
2024-02-20 22:12:27,153 best_value: 9062.0 median: 2676.0 mean: 3039.336
2024-02-20 22:12:27,153 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:29,594 Finished generation: 990 Max generations: 1000
2024-02-20 22:12:29,594 best_value: 9062.0 median: 2676.0 mean: 3014.816
2024-02-20 22:12:29,595 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:32,168 Finished generation: 991 Max generations: 1000
2024-02-20 22:12:32,169 best_value: 9062.0 median: 2676.0 mean: 3009.92
2024-02-20 22:12:32,169 import numpy as np
import math
rules = np.array([[math.sin(math.sin((math.log(abs((1.7)))) ) ), math.log(abs(2.4)), 6.7], [math.sin(+math.sin(math.log(abs(9.4)) ) ), 7.4, 4.9], [5.1, 8.2, math.sin(5.1 )]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:34,600 Finished generation: 992 Max generations: 1000
2024-02-20 22:12:34,601 best_value: 9107.0 median: 2676.0 mean: 2995.328
2024-02-20 22:12:34,601 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:36,920 Finished generation: 993 Max generations: 1000
2024-02-20 22:12:36,920 best_value: 9107.0 median: 0.0 mean: 2929.484
2024-02-20 22:12:36,920 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:39,152 Finished generation: 994 Max generations: 1000
2024-02-20 22:12:39,154 best_value: 9107.0 median: 0.0 mean: 2784.428
2024-02-20 22:12:39,155 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:41,557 Finished generation: 995 Max generations: 1000
2024-02-20 22:12:41,558 best_value: 9107.0 median: 0.0 mean: 2758.108
2024-02-20 22:12:41,558 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:43,883 Finished generation: 996 Max generations: 1000
2024-02-20 22:12:43,883 best_value: 9107.0 median: 0.0 mean: 2823.492
2024-02-20 22:12:43,884 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:46,050 Finished generation: 997 Max generations: 1000
2024-02-20 22:12:46,050 best_value: 9107.0 median: 0.0 mean: 2824.584
2024-02-20 22:12:46,050 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:48,447 Finished generation: 998 Max generations: 1000
2024-02-20 22:12:48,447 best_value: 9107.0 median: 0.0 mean: 2895.196
2024-02-20 22:12:48,448 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:50,771 Finished generation: 999 Max generations: 1000
2024-02-20 22:12:50,772 best_value: 9107.0 median: 0.0 mean: 2879.72
2024-02-20 22:12:50,772 import numpy as np
import math
rules = np.array([[math.sin(6.7 ), math.log(abs(math.sin(-(5.6) ))), 5.0], [math.log(abs((4.4))), 7.3, 2.4], [4.8, 5.9, math.log(abs(math.sin(-pow(8.5, 0.3) )))]])
with open('/workspaces/pyneurgen/2/satelite_data/ImageExpertReduced.txt', 'r') as expert_file:
    ground_truth = expert_file.read()
ground_truth = np.array([int(float(x)) for x in ground_truth.split()])
with open('/workspaces/pyneurgen/2/satelite_data/ImageRawReduced.txt', 'r') as data_file:
    satelite_images = data_file.read()
satelite_images = np.array([[float(x) for x in line.split()] for line in satelite_images.splitlines()])
signal = np.matmul(rules, satelite_images)
predictions = signal.argmax(axis=0) + 1
fitness = (predictions == ground_truth).sum()
self.set_bnf_variable('<fitness>', fitness)

2024-02-20 22:12:52,962 stopping processing due to max generation
2024-02-20 22:12:52,962 completed run: generations: 1000, best member:146 fitness: 9107.0
